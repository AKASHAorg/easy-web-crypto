{"version":3,"sources":["webpack://WebCrypto/webpack/universalModuleDefinition","webpack://WebCrypto/webpack/bootstrap","webpack://WebCrypto/./src/web-crypto.ts","webpack://WebCrypto/./node_modules/buffer/index.js","webpack://WebCrypto/(webpack)/buildin/global.js","webpack://WebCrypto/./node_modules/base64-js/index.js","webpack://WebCrypto/./node_modules/ieee754/index.js","webpack://WebCrypto/./node_modules/isarray/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","checkCryptokey","type","Error","genRandomBuffer","len","values","crypto","getRandomValues","Uint8Array","Buffer","from","genRandomBufferAsStr","encodingFormat","checkEncodingFormat","toString","format","genId","Math","floor","hash","data","digest","subtle","genKeyPair","extractable","namedCurve","generateKey","importPublicKey","importKey","importPrivateKey","exportPublicKey","exported","exportKey","exportPrivateKey","sign","signature","JSON","stringify","verify","genAESKey","keySize","length","parsedKey","exportedKey","encryptBuffer","cipherContext","encrypted","encrypt","decryptBuffer","decrypted","decrypt","e","message","context","iv","algorithm","plaintext","ciphertext","undefined","parse","error","deriveBits","passPhrase","salt","iterations","hashAlgo","console","warn","baseKey","derivedKey","deriveKeyFromPassphrase","str","checkPassphrase","derivationParams","genEncryptedMasterKey","keyEncryptionKey","masterKey","encryptedMasterKey","updatePassphraseKey","currentPassPhrase","newPassPhrase","oldMasterKey","decryptMasterKey","toBeEncryptedMasterKey","protectedMasterKey","_salt","decryptedMasterKeyHex","_genRandomBuffer","_genRandomBufferAsStr","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,YAAa,GAAIH,GACE,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,+BClFrD,m8B,0SAqBA,MAAMC,EAAkBT,IACtB,IAAKA,EAAIU,MAAqB,WAAbV,EAAIU,KACnB,MAAM,IAAIC,MAAM,qBAIdC,EAAkB,CAACC,EAAM,MAC7B,MAAMC,EAASzC,OAAO0C,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC5D,OAAOK,EAAOC,KAAKL,IAGfM,EAAuB,CAACP,EAAM,GAAIQ,EAAiC,SACnEA,GACFC,EAAoBD,GAGtB,OADYT,EAAgBC,GACjBU,SAASF,IAShBC,EAAuBE,IAC3B,GAAe,QAAXA,GAA+B,WAAXA,EAAqB,MAAM,IAAIb,MAAM,qBASzDc,EAAQ,CAACZ,EAAM,KAEZO,EAAqBM,KAAKC,MAAMd,EAAM,IAWzCe,EAAO,CAAOC,EAA4BL,EAAyB,MAAOxC,EAAO,YAAc,OAAD,6BAClG,MAAM8C,QAAezD,OAAO0C,OAAOgB,OAAOD,OACxC,CACE9C,QAEe,iBAAT6C,EAAqBX,EAAOC,KAAKU,GAAQA,GAEnD,OAAOX,EAAOC,KAAKW,GAAQP,SAASC,MAUhCQ,EAAa,CAACC,GAAc,EAAMC,EAAa,UAC5C7D,OAAO0C,OAAOgB,OAAOI,YAC1B,CACEnD,KAAM,QACNkD,cAEFD,EACA,CAAC,OAAQ,WAmBb,SAASG,EAAgBpC,EAA0BkC,EAAa,QAASV,EAA4B,UACnG,OAAOnD,OAAO0C,OAAOgB,OAAOM,UAC1B,OACe,iBAARrC,EAAmBkB,EAAOC,KAAKnB,EAAKwB,GAA4BxB,EACvE,CACEhB,KAAM,QACNkD,eAEF,EACA,CAAC,WAeL,SAASI,EAAiBtC,EAA0BkC,EAAa,QAASV,EAA4B,UACpG,OAAOnD,OAAO0C,OAAOgB,OAAOM,UAC1B,QACe,iBAARrC,EAAmBkB,EAAOC,KAAKnB,EAAKwB,GAA4BxB,EACvE,CACEhB,KAAM,QACNkD,eAEF,EACA,CAAC,SAcL,SAAeK,EAAgBvC,EAAgBwB,EAA4B,U,yCACzE,MAAMgB,QAAiBnE,OAAO0C,OAAOgB,OAAOU,UAAU,OAAQzC,GAC9D,MAAmB,QAAXwB,EAAoB,IAAIP,WAAWuB,GAAYtB,EAAOC,KAAKqB,GAAUjB,SAASC,MAYxF,SAAekB,EAAiB1C,EAAgBwB,EAA4B,U,yCAC1E,MAAMgB,QAAiBnE,OAAO0C,OAAOgB,OAAOU,UAAU,QAASzC,GAC/D,MAAmB,QAAXwB,EAAoB,IAAIP,WAAWuB,GAAYtB,EAAOC,KAAKqB,GAAUjB,SAASC,MAWxF,MAAMmB,EAAO,CAAO3C,EAAgB6B,EAAWL,EAA4B,SAAUI,EAAO,YAAc,OAAD,6BACvG,MAAMgB,QAAkBvE,OAAO0C,OAAOgB,OAAOY,KAC3C,CACE3D,KAAM,QACN4C,KAAM,CAAE5C,KAAM4C,IAEhB5B,EACAkB,EAAOC,KAAK0B,KAAKC,UAAUjB,KAE7B,MAAmB,QAAXL,EAAoB,IAAIP,WAAW2B,GAAa1B,EAAOC,KAAKyB,GAAWrB,SAASC,MAWpFuB,EAAS,CAAO/C,EAAgB6B,EAAWe,EAAmBpB,EAAyB,SAAUI,EAAO,YAAc,OAAD,6BACzH,OAAOvD,OAAO0C,OAAOgB,OAAOgB,OAC1B,CACE/D,KAAM,QACN4C,KAAM,CAAE5C,KAAM4C,IAEhB5B,EACAkB,EAAOC,KAAKyB,EAAWpB,GACvBN,EAAOC,KAAK0B,KAAKC,UAAUjB,QAYzBmB,EAAY,CAACf,GAAc,EAAMrC,EAAO,UAAWqD,EAAU,MAC1D5E,OAAO0C,OAAOgB,OAAOI,YAAY,CACtCnD,KAAMY,EACNsD,OAAQD,GAEVhB,EACA,CAAC,UAAW,YAWRI,EAAY,CAACrC,EAAkBU,EAAO,MAAOd,EAAO,aACxD,MAAMuD,EAAsB,QAATzC,EAAkBQ,EAAOC,KAAKnB,EAA0B,UAAYA,EACvF,OAAO3B,OAAO0C,OAAOgB,OAAOM,UAAU3B,EAAMyC,EAAW,CAAEnE,KAAMY,IAC3D,EAAM,CAAC,UAAW,aAUlB6C,EAAY,CAAOzC,EAAgBU,EAAyC,QAAU,OAAD,6BACzF,MAAM0C,QAAoB/E,OAAO0C,OAAOgB,OAAOU,UAAU/B,EAAMV,GAC/D,MAAiB,QAATU,EAAkB,IAAIO,WAAWmC,GAA8BA,KAWnEC,EAAgB,CAAyCrD,EAAgB6B,EAAcyB,IAAkC,OAAD,6BAC5H,MAAMC,QAAkBlF,OAAO0C,OAAOgB,OAAOyB,QAAQF,EAAetD,EAAK6B,GACzE,OAAO,IAAIZ,WAAWsC,MAUlBE,EAAgB,CAAyCzD,EAAgB6B,EAAmByB,IAAkC,OAAD,6BAEjI,IACE,MAAMI,QAAkBrF,OAAO0C,OAAOgB,OAAO4B,QAAQL,EAAetD,EAAK6B,GACzE,OAAO,IAAIZ,WAAWyC,GACtB,MAAOE,GACP,GAAkB,qDAAdA,EAAEC,QACJ,MAAM,IAAIlD,MAAM,8BAahB6C,EAAU,CAAOxD,EAAgB6B,EAAuBL,EAAyB,QAA+B,OAAD,6BACnHf,EAAeT,GACf,MAAM8D,EAAU,CACdC,GAAInD,EAAuC,YAAvBZ,EAAIgE,UAAUhF,KAAqB,GAAK,IAC5DiF,UAAW/C,EAAOC,KAAK0B,KAAKC,UAAUjB,KAIlCyB,EAAgB,CACpBtE,KAAMgB,EAAIgE,UAAUhF,KACpB+E,GAAID,EAAQC,IAGRR,QAAkBF,EAAcrD,EAAK8D,EAAQG,UAAWX,GAC9D,MAAO,CACLY,WAAYhD,EAAOC,KAAKoC,GAAWhC,SAASC,GAC5CuC,GAAI7C,EAAOC,KAAK2C,EAAQC,IAAIxC,SAASC,OAWnCmC,EAAU,CAAO3D,EAAgBkE,EAAwB1C,EAAyB,QAAU,OAAD,6BAC/Ff,EAAeT,GAEf,MAAM8D,EAAU,CACdI,WAAYhD,EAAOC,KAAKhC,OAAOkB,UAAUC,eAAe1B,KAAKsF,EAAY,cAAgBA,EAAWA,WAAa,GAAI,GAErHH,GAAI5E,OAAOkB,UAAUC,eAAe1B,KAAKsF,EAAY,MAAQhD,EAAOC,KAAK+C,EAAWH,GAAI,GAAY,IAIhGT,EAAgB,CACpBtE,KAAMgB,EAAIgE,UAAUhF,KACpB+E,GAAID,EAAQC,IAEd,IACE,MAAML,QAAkBD,EAAczD,EAAK8D,EAAQI,WAAYZ,GAC/D,QAAkBa,IAAdT,EACF,MAAM,IAAI/C,MAEZ,OAAOkC,KAAKuB,MAAMlD,EAAOC,KAAKuC,GAAWnC,YACzC,MAAO8C,GACP,MAAM,IAAI1D,MAAM,8BAad2D,EAAa,CAAOC,EAAkCC,EAAmBC,EAAoBC,IAAqB,OAAD,6BAEjHD,EAAa,KAASE,QAAQC,KAAK,sBAEvC,MAAMC,QAAgBxG,OAAO0C,OAAOgB,OAAOM,UACzC,MACuB,iBAAfkC,EAA2BrD,EAAOC,KAAKoD,GAAcA,EAC7D,UACA,EACA,CAAC,aAAc,cAEXO,QAAmBzG,OAAO0C,OAAOgB,OAAOuC,WAAW,CACvDtF,KAAM,SACNwF,KAAMA,GAAQ,IAAIvD,WAAW,IAC7BwD,WAAYA,GAAc,IAC1B7C,KAAM8C,GAAY,WACjBG,EAAS,KAEZ,OAAO,IAAI5D,WAAW6D,MAalBC,EAA0B,CAAOR,EAAoBC,EAAO5D,EAAgB,IAAK6D,EAAa,IAAQC,EAAmB,YAAc,OAAD,6BAjWpH,CAACM,IACvB,GAAmB,iBAARA,GAA4B,KAARA,EAC7B,MAAM,IAAIrE,MAAM,sBAgWlBsE,CAAgBV,GAEhB,MAAMO,QAAmBR,EAAWC,EAAYC,EAAMC,EAAYC,GAC5D1E,QAAYqC,EAAUyC,GAC5B,MAAO,CACLI,iBAAkB,CAChBV,KAAMtD,EAAOC,KAAKqD,GAAMjD,SAAS,OACjCkD,aACAC,YAEF1E,UAeEmF,EAAwB,CAAOZ,EAAoBC,EAAeC,EAAqBC,IAAmD,OAAD,6BAE7I,MAAMU,QAAyBL,EAAwBR,EAAYC,EAAMC,EAAYC,GAG/EW,EAAYjE,EAAqB,GAAI,OAErCkE,QAA2B9B,EAAQ4B,EAAiBpF,IAAKqF,GAE/D,MAAO,CACLH,iBAAkBE,EAAiBF,iBACnCI,yBAgBEC,EAAsB,CAAOC,EAA2BC,EAAuBC,EAAkClB,EAAeC,EAAqBC,IAAmD,OAAD,6BAC3M,MAAMW,QAAkBM,EAAiBH,EAAmBE,GAEtDN,QAAyBL,EAAwBU,EAAejB,EAAMC,EAAYC,GAGlFkB,EAAyB1E,EAAOC,WAAWsB,EAAU4C,IAAY9D,SAAS,OAE1E+D,QAA2B9B,EAAQ4B,EAAiBpF,IAAK4F,GAE/D,MAAO,CACLV,iBAAkBE,EAAiBF,iBACnCI,yBAaEK,EAAmB,CAAOpB,EAAoBsB,IAA2C,OAAD,6BAC5F,IAAKA,EAAmBP,qBACrBO,EAAmBX,iBACpB,MAAM,IAAIvE,MAAM,sCAElB,MAAM,iBAAEuE,EAAgB,mBAAEI,GAAuBO,GAC3C,KAAErB,EAAI,WAAEC,EAAU,SAAEC,GAAaQ,EACjCY,EAA0B,iBAAX,EAAsB5E,EAAOC,KAAKqD,EAAM,OAAWA,EAClEM,QAAmBR,EAAWC,EAAYuB,EAAOrB,EAAYC,GAC7DU,QAAyB/C,EAAUyC,GACzC,IACE,MAAMiB,QAA8BpC,EAAQyB,EAAkBE,GAExDnC,EAAYjC,EAAOC,KAAK4E,EAAuB,OACrD,OAAO1H,OAAO0C,OAAOgB,OAAOM,UAAU,MAAOc,EAAW,CAAEnE,KAAM,YAC5D,EAAM,CAAC,UAAW,YACtB,MAAOqF,GACP,MAAM,IAAI1D,MAAM,wBAIdqF,EAAmBpF,EACnBqF,EAAwB7E,G,sDC7e9B;;;;;;;AAUA,IAAI8E,EAAS,EAAQ,GACjBC,EAAU,EAAQ,GAClBC,EAAU,EAAQ,GAmDtB,SAASC,IACP,OAAOnF,EAAOoF,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMtD,GAC3B,GAAImD,IAAenD,EACjB,MAAM,IAAIuD,WAAW,8BAcvB,OAZIvF,EAAOoF,qBAETE,EAAO,IAAIvF,WAAWiC,IACjBwD,UAAYxF,EAAOb,WAGX,OAATmG,IACFA,EAAO,IAAItF,EAAOgC,IAEpBsD,EAAKtD,OAASA,GAGTsD,EAaT,SAAStF,EAAQyF,EAAKC,EAAkB1D,GACtC,KAAKhC,EAAOoF,qBAAyBO,gBAAgB3F,GACnD,OAAO,IAAIA,EAAOyF,EAAKC,EAAkB1D,GAI3C,GAAmB,iBAARyD,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIjG,MACR,qEAGJ,OAAOmG,EAAYD,KAAMF,GAE3B,OAAOxF,EAAK0F,KAAMF,EAAKC,EAAkB1D,GAW3C,SAAS/B,EAAMqF,EAAM9G,EAAOkH,EAAkB1D,GAC5C,GAAqB,iBAAVxD,EACT,MAAM,IAAIqH,UAAU,yCAGtB,MAA2B,oBAAhBC,aAA+BtH,aAAiBsH,YA6H7D,SAA0BR,EAAMS,EAAOC,EAAYhE,GAGjD,GAFA+D,EAAME,WAEFD,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAIT,WAAW,6BAGvB,GAAIQ,EAAME,WAAaD,GAAchE,GAAU,GAC7C,MAAM,IAAIuD,WAAW,6BAIrBQ,OADiB9C,IAAf+C,QAAuC/C,IAAXjB,EACtB,IAAIjC,WAAWgG,QACH9C,IAAXjB,EACD,IAAIjC,WAAWgG,EAAOC,GAEtB,IAAIjG,WAAWgG,EAAOC,EAAYhE,GAGxChC,EAAOoF,qBAETE,EAAOS,GACFP,UAAYxF,EAAOb,UAGxBmG,EAAOY,EAAcZ,EAAMS,GAE7B,OAAOT,EAvJEa,CAAgBb,EAAM9G,EAAOkH,EAAkB1D,GAGnC,iBAAVxD,EAwFb,SAAqB8G,EAAMc,EAAQC,GACT,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKrG,EAAOsG,WAAWD,GACrB,MAAM,IAAIR,UAAU,8CAGtB,IAAI7D,EAAwC,EAA/BiE,EAAWG,EAAQC,GAG5BE,GAFJjB,EAAOD,EAAaC,EAAMtD,IAERwE,MAAMJ,EAAQC,GAE5BE,IAAWvE,IAIbsD,EAAOA,EAAKmB,MAAM,EAAGF,IAGvB,OAAOjB,EA5GEoB,CAAWpB,EAAM9G,EAAOkH,GAsJnC,SAAqBJ,EAAMqB,GACzB,GAAI3G,EAAO4G,SAASD,GAAM,CACxB,IAAIhH,EAA4B,EAAtBkH,EAAQF,EAAI3E,QAGtB,OAAoB,KAFpBsD,EAAOD,EAAaC,EAAM3F,IAEjBqC,QAIT2E,EAAIG,KAAKxB,EAAM,EAAG,EAAG3F,GAHZ2F,EAOX,GAAIqB,EAAK,CACP,GAA4B,oBAAhBb,aACRa,EAAII,kBAAkBjB,aAAgB,WAAYa,EACpD,MAA0B,iBAAfA,EAAI3E,SA+8CLgF,EA/8CkCL,EAAI3E,SAg9CrCgF,EA/8CF3B,EAAaC,EAAM,GAErBY,EAAcZ,EAAMqB,GAG7B,GAAiB,WAAbA,EAAInH,MAAqB0F,EAAQyB,EAAIhG,MACvC,OAAOuF,EAAcZ,EAAMqB,EAAIhG,MAw8CrC,IAAgBqG,EAp8Cd,MAAM,IAAInB,UAAU,sFA9KboB,CAAW3B,EAAM9G,GA4B1B,SAAS0I,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAItB,UAAU,oCACf,GAAIsB,EAAO,EAChB,MAAM,IAAI5B,WAAW,wCA4BzB,SAASK,EAAaN,EAAM6B,GAG1B,GAFAD,EAAWC,GACX7B,EAAOD,EAAaC,EAAM6B,EAAO,EAAI,EAAoB,EAAhBN,EAAQM,KAC5CnH,EAAOoF,oBACV,IAAK,IAAI7H,EAAI,EAAGA,EAAI4J,IAAQ5J,EAC1B+H,EAAK/H,GAAK,EAGd,OAAO+H,EAwCT,SAASY,EAAeZ,EAAMS,GAC5B,IAAI/D,EAAS+D,EAAM/D,OAAS,EAAI,EAA4B,EAAxB6E,EAAQd,EAAM/D,QAClDsD,EAAOD,EAAaC,EAAMtD,GAC1B,IAAK,IAAIzE,EAAI,EAAGA,EAAIyE,EAAQzE,GAAK,EAC/B+H,EAAK/H,GAAgB,IAAXwI,EAAMxI,GAElB,OAAO+H,EA+DT,SAASuB,EAAS7E,GAGhB,GAAIA,GAAUmD,IACZ,MAAM,IAAII,WAAW,0DACaJ,IAAa9E,SAAS,IAAM,UAEhE,OAAgB,EAAT2B,EAsFT,SAASiE,EAAYG,EAAQC,GAC3B,GAAIrG,EAAO4G,SAASR,GAClB,OAAOA,EAAOpE,OAEhB,GAA2B,oBAAhB8D,aAA6D,mBAAvBA,YAAYsB,SACxDtB,YAAYsB,OAAOhB,IAAWA,aAAkBN,aACnD,OAAOM,EAAOH,WAEM,iBAAXG,IACTA,EAAS,GAAKA,GAGhB,IAAIzG,EAAMyG,EAAOpE,OACjB,GAAY,IAARrC,EAAW,OAAO,EAItB,IADA,IAAI0H,GAAc,IAEhB,OAAQhB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO1G,EACT,IAAK,OACL,IAAK,QACL,UAAKsD,EACH,OAAOqE,EAAYlB,GAAQpE,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANrC,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO4H,EAAcnB,GAAQpE,OAC/B,QACE,GAAIqF,EAAa,OAAOC,EAAYlB,GAAQpE,OAC5CqE,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,GAMtB,SAASI,EAAcpB,EAAUqB,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALcpE,IAAVyE,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQ/B,KAAK3D,OACf,MAAO,GAOT,SAJYiB,IAAR0E,GAAqBA,EAAMhC,KAAK3D,UAClC2F,EAAMhC,KAAK3D,QAGT2F,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKrB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOuB,EAASjC,KAAM+B,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOE,EAAUlC,KAAM+B,EAAOC,GAEhC,IAAK,QACH,OAAOG,EAAWnC,KAAM+B,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOI,EAAYpC,KAAM+B,EAAOC,GAElC,IAAK,SACH,OAAOK,EAAYrC,KAAM+B,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOM,EAAatC,KAAM+B,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAIxB,UAAU,qBAAuBQ,GAC5DA,GAAYA,EAAW,IAAImB,cAC3BH,GAAc,GAStB,SAASa,EAAMC,EAAGnJ,EAAGrB,GACnB,IAAIJ,EAAI4K,EAAEnJ,GACVmJ,EAAEnJ,GAAKmJ,EAAExK,GACTwK,EAAExK,GAAKJ,EAmIT,SAAS6K,EAAsBrB,EAAQC,EAAKhB,EAAYK,EAAUgC,GAEhE,GAAsB,IAAlBtB,EAAO/E,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfgE,GACTK,EAAWL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVsC,MAAMtC,KAERA,EAAaqC,EAAM,EAAKtB,EAAO/E,OAAS,GAItCgE,EAAa,IAAGA,EAAae,EAAO/E,OAASgE,GAC7CA,GAAce,EAAO/E,OAAQ,CAC/B,GAAIqG,EAAK,OAAQ,EACZrC,EAAae,EAAO/E,OAAS,OAC7B,GAAIgE,EAAa,EAAG,CACzB,IAAIqC,EACC,OAAQ,EADJrC,EAAa,EAUxB,GALmB,iBAARgB,IACTA,EAAMhH,EAAOC,KAAK+G,EAAKX,IAIrBrG,EAAO4G,SAASI,GAElB,OAAmB,IAAfA,EAAIhF,QACE,EAEHuG,EAAaxB,EAAQC,EAAKhB,EAAYK,EAAUgC,GAClD,GAAmB,iBAARrB,EAEhB,OADAA,GAAY,IACRhH,EAAOoF,qBACiC,mBAAjCrF,WAAWZ,UAAUqJ,QAC1BH,EACKtI,WAAWZ,UAAUqJ,QAAQ9K,KAAKqJ,EAAQC,EAAKhB,GAE/CjG,WAAWZ,UAAUsJ,YAAY/K,KAAKqJ,EAAQC,EAAKhB,GAGvDuC,EAAaxB,EAAQ,CAAEC,GAAOhB,EAAYK,EAAUgC,GAG7D,MAAM,IAAIxC,UAAU,wCAGtB,SAAS0C,EAAcG,EAAK1B,EAAKhB,EAAYK,EAAUgC,GACrD,IA0BI9K,EA1BAoL,EAAY,EACZC,EAAYF,EAAI1G,OAChB6G,EAAY7B,EAAIhF,OAEpB,QAAiBiB,IAAboD,IAEe,UADjBA,EAAWyC,OAAOzC,GAAUmB,gBACY,UAAbnB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIqC,EAAI1G,OAAS,GAAKgF,EAAIhF,OAAS,EACjC,OAAQ,EAEV2G,EAAY,EACZC,GAAa,EACbC,GAAa,EACb7C,GAAc,EAIlB,SAAS+C,EAAMC,EAAKzL,GAClB,OAAkB,IAAdoL,EACKK,EAAIzL,GAEJyL,EAAIC,aAAa1L,EAAIoL,GAKhC,GAAIN,EAAK,CACP,IAAIa,GAAc,EAClB,IAAK3L,EAAIyI,EAAYzI,EAAIqL,EAAWrL,IAClC,GAAIwL,EAAKL,EAAKnL,KAAOwL,EAAK/B,GAAqB,IAAhBkC,EAAoB,EAAI3L,EAAI2L,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa3L,GAChCA,EAAI2L,EAAa,IAAML,EAAW,OAAOK,EAAaP,OAEtC,IAAhBO,IAAmB3L,GAAKA,EAAI2L,GAChCA,GAAc,OAKlB,IADIlD,EAAa6C,EAAYD,IAAW5C,EAAa4C,EAAYC,GAC5DtL,EAAIyI,EAAYzI,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAI4L,GAAQ,EACHC,EAAI,EAAGA,EAAIP,EAAWO,IAC7B,GAAIL,EAAKL,EAAKnL,EAAI6L,KAAOL,EAAK/B,EAAKoC,GAAI,CACrCD,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAO5L,EAItB,OAAQ,EAeV,SAAS8L,EAAUL,EAAK5C,EAAQkD,EAAQtH,GACtCsH,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAYR,EAAIhH,OAASsH,EACxBtH,GAGHA,EAASuH,OAAOvH,IACHwH,IACXxH,EAASwH,GAJXxH,EAASwH,EASX,IAAIC,EAASrD,EAAOpE,OACpB,GAAIyH,EAAS,GAAM,EAAG,MAAM,IAAI5D,UAAU,sBAEtC7D,EAASyH,EAAS,IACpBzH,EAASyH,EAAS,GAEpB,IAAK,IAAIlM,EAAI,EAAGA,EAAIyE,IAAUzE,EAAG,CAC/B,IAAImM,EAASC,SAASvD,EAAOwD,OAAW,EAAJrM,EAAO,GAAI,IAC/C,GAAI+K,MAAMoB,GAAS,OAAOnM,EAC1ByL,EAAIM,EAAS/L,GAAKmM,EAEpB,OAAOnM,EAGT,SAASsM,EAAWb,EAAK5C,EAAQkD,EAAQtH,GACvC,OAAO8H,EAAWxC,EAAYlB,EAAQ4C,EAAIhH,OAASsH,GAASN,EAAKM,EAAQtH,GAG3E,SAAS+H,EAAYf,EAAK5C,EAAQkD,EAAQtH,GACxC,OAAO8H,EAq6BT,SAAuBhG,GAErB,IADA,IAAIkG,EAAY,GACPzM,EAAI,EAAGA,EAAIuG,EAAI9B,SAAUzE,EAEhCyM,EAAUC,KAAyB,IAApBnG,EAAIoG,WAAW3M,IAEhC,OAAOyM,EA36BWG,CAAa/D,GAAS4C,EAAKM,EAAQtH,GAGvD,SAASoI,EAAapB,EAAK5C,EAAQkD,EAAQtH,GACzC,OAAO+H,EAAWf,EAAK5C,EAAQkD,EAAQtH,GAGzC,SAASqI,EAAarB,EAAK5C,EAAQkD,EAAQtH,GACzC,OAAO8H,EAAWvC,EAAcnB,GAAS4C,EAAKM,EAAQtH,GAGxD,SAASsI,EAAWtB,EAAK5C,EAAQkD,EAAQtH,GACvC,OAAO8H,EAk6BT,SAAyBhG,EAAKyG,GAG5B,IAFA,IAAI3M,EAAG4M,EAAIC,EACPT,EAAY,GACPzM,EAAI,EAAGA,EAAIuG,EAAI9B,WACjBuI,GAAS,GAAK,KADahN,EAGhCK,EAAIkG,EAAIoG,WAAW3M,GACnBiN,EAAK5M,GAAK,EACV6M,EAAK7M,EAAI,IACToM,EAAUC,KAAKQ,GACfT,EAAUC,KAAKO,GAGjB,OAAOR,EA/6BWU,CAAetE,EAAQ4C,EAAIhH,OAASsH,GAASN,EAAKM,EAAQtH,GAkF9E,SAASgG,EAAagB,EAAKtB,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQqB,EAAIhH,OACtBgD,EAAO2F,cAAc3B,GAErBhE,EAAO2F,cAAc3B,EAAIvC,MAAMiB,EAAOC,IAIjD,SAASE,EAAWmB,EAAKtB,EAAOC,GAC9BA,EAAMnH,KAAKoK,IAAI5B,EAAIhH,OAAQ2F,GAI3B,IAHA,IAAIkD,EAAM,GAENtN,EAAImK,EACDnK,EAAIoK,GAAK,CACd,IAQMmD,EAAYC,EAAWC,EAAYC,EARrCC,EAAYlC,EAAIzL,GAChB4N,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAI3N,EAAI6N,GAAoBzD,EAG1B,OAAQyD,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAa9B,EAAIzL,EAAI,OAEnB0N,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa9B,EAAIzL,EAAI,GACrBwN,EAAY/B,EAAIzL,EAAI,GACQ,MAAV,IAAbuN,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa9B,EAAIzL,EAAI,GACrBwN,EAAY/B,EAAIzL,EAAI,GACpByN,EAAahC,EAAIzL,EAAI,GACO,MAAV,IAAbuN,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIZ,KAAKkB,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIZ,KAAKkB,GACT5N,GAAK6N,EAGP,OAQF,SAAgCC,GAC9B,IAAI1L,EAAM0L,EAAWrJ,OACrB,GAAIrC,GAJqB,KAKvB,OAAOmJ,OAAOwC,aAAaC,MAAMzC,OAAQuC,GAI3C,IAAIR,EAAM,GACNtN,EAAI,EACR,KAAOA,EAAIoC,GACTkL,GAAO/B,OAAOwC,aAAaC,MACzBzC,OACAuC,EAAW5E,MAAMlJ,EAAGA,GAdC,OAiBzB,OAAOsN,EAvBAW,CAAsBX,GA98B/B9N,EAAQiD,OAASA,EACjBjD,EAAQ0O,WAoTR,SAAqBzJ,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOhC,EAAO0L,OAAO1J,IAvTvBjF,EAAQ4O,kBAAoB,GA0B5B3L,EAAOoF,yBAAqDnC,IAA/B2I,EAAOxG,oBAChCwG,EAAOxG,oBAQX,WACE,IACE,IAAIsD,EAAM,IAAI3I,WAAW,GAEzB,OADA2I,EAAIlD,UAAY,CAACA,UAAWzF,WAAWZ,UAAW0M,IAAK,WAAc,OAAO,KACvD,KAAdnD,EAAImD,OACiB,mBAAjBnD,EAAIoD,UACuB,IAAlCpD,EAAIoD,SAAS,EAAG,GAAG7F,WACvB,MAAOvD,GACP,OAAO,GAfPqJ,GAKJhP,EAAQoI,WAAaA,IAkErBnF,EAAOgM,SAAW,KAGlBhM,EAAOiM,SAAW,SAAUvD,GAE1B,OADAA,EAAIlD,UAAYxF,EAAOb,UAChBuJ,GA2BT1I,EAAOC,KAAO,SAAUzB,EAAOkH,EAAkB1D,GAC/C,OAAO/B,EAAK,KAAMzB,EAAOkH,EAAkB1D,IAGzChC,EAAOoF,sBACTpF,EAAOb,UAAUqG,UAAYzF,WAAWZ,UACxCa,EAAOwF,UAAYzF,WACG,oBAAXzB,QAA0BA,OAAO4N,SACxClM,EAAO1B,OAAO4N,WAAalM,GAE7B/B,OAAOC,eAAe8B,EAAQ1B,OAAO4N,QAAS,CAC5C1N,MAAO,KACP2N,cAAc,KAiCpBnM,EAAO0L,MAAQ,SAAUvE,EAAMiF,EAAM/F,GACnC,OArBF,SAAgBf,EAAM6B,EAAMiF,EAAM/F,GAEhC,OADAa,EAAWC,GACPA,GAAQ,EACH9B,EAAaC,EAAM6B,QAEflE,IAATmJ,EAIyB,iBAAb/F,EACVhB,EAAaC,EAAM6B,GAAMiF,KAAKA,EAAM/F,GACpChB,EAAaC,EAAM6B,GAAMiF,KAAKA,GAE7B/G,EAAaC,EAAM6B,GAQnBuE,CAAM,KAAMvE,EAAMiF,EAAM/F,IAiBjCrG,EAAO4F,YAAc,SAAUuB,GAC7B,OAAOvB,EAAY,KAAMuB,IAK3BnH,EAAOqM,gBAAkB,SAAUlF,GACjC,OAAOvB,EAAY,KAAMuB,IAiH3BnH,EAAO4G,SAAW,SAAmBuB,GACnC,QAAe,MAALA,IAAaA,EAAEmE,YAG3BtM,EAAOuM,QAAU,SAAkBC,EAAGrE,GACpC,IAAKnI,EAAO4G,SAAS4F,KAAOxM,EAAO4G,SAASuB,GAC1C,MAAM,IAAItC,UAAU,6BAGtB,GAAI2G,IAAMrE,EAAG,OAAO,EAKpB,IAHA,IAAIsE,EAAID,EAAExK,OACN0K,EAAIvE,EAAEnG,OAEDzE,EAAI,EAAGoC,EAAMa,KAAKoK,IAAI6B,EAAGC,GAAInP,EAAIoC,IAAOpC,EAC/C,GAAIiP,EAAEjP,KAAO4K,EAAE5K,GAAI,CACjBkP,EAAID,EAAEjP,GACNmP,EAAIvE,EAAE5K,GACN,MAIJ,OAAIkP,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTzM,EAAOsG,WAAa,SAAqBD,GACvC,OAAQyC,OAAOzC,GAAUmB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbxH,EAAO2M,OAAS,SAAiBC,EAAM5K,GACrC,IAAKkD,EAAQ0H,GACX,MAAM,IAAI/G,UAAU,+CAGtB,GAAoB,IAAhB+G,EAAK5K,OACP,OAAOhC,EAAO0L,MAAM,GAGtB,IAAInO,EACJ,QAAe0F,IAAXjB,EAEF,IADAA,EAAS,EACJzE,EAAI,EAAGA,EAAIqP,EAAK5K,SAAUzE,EAC7ByE,GAAU4K,EAAKrP,GAAGyE,OAItB,IAAI+E,EAAS/G,EAAO4F,YAAY5D,GAC5B6K,EAAM,EACV,IAAKtP,EAAI,EAAGA,EAAIqP,EAAK5K,SAAUzE,EAAG,CAChC,IAAIyL,EAAM4D,EAAKrP,GACf,IAAKyC,EAAO4G,SAASoC,GACnB,MAAM,IAAInD,UAAU,+CAEtBmD,EAAIlC,KAAKC,EAAQ8F,GACjBA,GAAO7D,EAAIhH,OAEb,OAAO+E,GA8CT/G,EAAOiG,WAAaA,EA0EpBjG,EAAOb,UAAUmN,WAAY,EAQ7BtM,EAAOb,UAAU2N,OAAS,WACxB,IAAInN,EAAMgG,KAAK3D,OACf,GAAIrC,EAAM,GAAM,EACd,MAAM,IAAI4F,WAAW,6CAEvB,IAAK,IAAIhI,EAAI,EAAGA,EAAIoC,EAAKpC,GAAK,EAC5B2K,EAAKvC,KAAMpI,EAAGA,EAAI,GAEpB,OAAOoI,MAGT3F,EAAOb,UAAU4N,OAAS,WACxB,IAAIpN,EAAMgG,KAAK3D,OACf,GAAIrC,EAAM,GAAM,EACd,MAAM,IAAI4F,WAAW,6CAEvB,IAAK,IAAIhI,EAAI,EAAGA,EAAIoC,EAAKpC,GAAK,EAC5B2K,EAAKvC,KAAMpI,EAAGA,EAAI,GAClB2K,EAAKvC,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,MAGT3F,EAAOb,UAAU6N,OAAS,WACxB,IAAIrN,EAAMgG,KAAK3D,OACf,GAAIrC,EAAM,GAAM,EACd,MAAM,IAAI4F,WAAW,6CAEvB,IAAK,IAAIhI,EAAI,EAAGA,EAAIoC,EAAKpC,GAAK,EAC5B2K,EAAKvC,KAAMpI,EAAGA,EAAI,GAClB2K,EAAKvC,KAAMpI,EAAI,EAAGA,EAAI,GACtB2K,EAAKvC,KAAMpI,EAAI,EAAGA,EAAI,GACtB2K,EAAKvC,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,MAGT3F,EAAOb,UAAUkB,SAAW,WAC1B,IAAI2B,EAAuB,EAAd2D,KAAK3D,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBiL,UAAUjL,OAAqB6F,EAAUlC,KAAM,EAAG3D,GAC/CyF,EAAa8D,MAAM5F,KAAMsH,YAGlCjN,EAAOb,UAAU+N,OAAS,SAAiB/E,GACzC,IAAKnI,EAAO4G,SAASuB,GAAI,MAAM,IAAItC,UAAU,6BAC7C,OAAIF,OAASwC,GACsB,IAA5BnI,EAAOuM,QAAQ5G,KAAMwC,IAG9BnI,EAAOb,UAAUgO,QAAU,WACzB,IAAIrJ,EAAM,GACNsJ,EAAMrQ,EAAQ4O,kBAKlB,OAJIhG,KAAK3D,OAAS,IAChB8B,EAAM6B,KAAKtF,SAAS,MAAO,EAAG+M,GAAKC,MAAM,SAASC,KAAK,KACnD3H,KAAK3D,OAASoL,IAAKtJ,GAAO,UAEzB,WAAaA,EAAM,KAG5B9D,EAAOb,UAAUoN,QAAU,SAAkBgB,EAAQ7F,EAAOC,EAAK6F,EAAWC,GAC1E,IAAKzN,EAAO4G,SAAS2G,GACnB,MAAM,IAAI1H,UAAU,6BAgBtB,QAbc5C,IAAVyE,IACFA,EAAQ,QAEEzE,IAAR0E,IACFA,EAAM4F,EAASA,EAAOvL,OAAS,QAEfiB,IAAduK,IACFA,EAAY,QAEEvK,IAAZwK,IACFA,EAAU9H,KAAK3D,QAGb0F,EAAQ,GAAKC,EAAM4F,EAAOvL,QAAUwL,EAAY,GAAKC,EAAU9H,KAAK3D,OACtE,MAAM,IAAIuD,WAAW,sBAGvB,GAAIiI,GAAaC,GAAW/F,GAASC,EACnC,OAAO,EAET,GAAI6F,GAAaC,EACf,OAAQ,EAEV,GAAI/F,GAASC,EACX,OAAO,EAQT,GAAIhC,OAAS4H,EAAQ,OAAO,EAS5B,IAPA,IAAId,GAJJgB,KAAa,IADbD,KAAe,GAMXd,GAPJ/E,KAAS,IADTD,KAAW,GASP/H,EAAMa,KAAKoK,IAAI6B,EAAGC,GAElBgB,EAAW/H,KAAKc,MAAM+G,EAAWC,GACjCE,EAAaJ,EAAO9G,MAAMiB,EAAOC,GAE5BpK,EAAI,EAAGA,EAAIoC,IAAOpC,EACzB,GAAImQ,EAASnQ,KAAOoQ,EAAWpQ,GAAI,CACjCkP,EAAIiB,EAASnQ,GACbmP,EAAIiB,EAAWpQ,GACf,MAIJ,OAAIkP,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA6HTzM,EAAOb,UAAUyO,SAAW,SAAmB5G,EAAKhB,EAAYK,GAC9D,OAAoD,IAA7CV,KAAK6C,QAAQxB,EAAKhB,EAAYK,IAGvCrG,EAAOb,UAAUqJ,QAAU,SAAkBxB,EAAKhB,EAAYK,GAC5D,OAAO+B,EAAqBzC,KAAMqB,EAAKhB,EAAYK,GAAU,IAG/DrG,EAAOb,UAAUsJ,YAAc,SAAsBzB,EAAKhB,EAAYK,GACpE,OAAO+B,EAAqBzC,KAAMqB,EAAKhB,EAAYK,GAAU,IAkD/DrG,EAAOb,UAAUqH,MAAQ,SAAgBJ,EAAQkD,EAAQtH,EAAQqE,GAE/D,QAAepD,IAAXqG,EACFjD,EAAW,OACXrE,EAAS2D,KAAK3D,OACdsH,EAAS,OAEJ,QAAerG,IAAXjB,GAA0C,iBAAXsH,EACxCjD,EAAWiD,EACXtH,EAAS2D,KAAK3D,OACdsH,EAAS,MAEJ,KAAIuE,SAASvE,GAWlB,MAAM,IAAI7J,MACR,2EAXF6J,GAAkB,EACduE,SAAS7L,IACXA,GAAkB,OACDiB,IAAboD,IAAwBA,EAAW,UAEvCA,EAAWrE,EACXA,OAASiB,GASb,IAAIuG,EAAY7D,KAAK3D,OAASsH,EAG9B,SAFerG,IAAXjB,GAAwBA,EAASwH,KAAWxH,EAASwH,GAEpDpD,EAAOpE,OAAS,IAAMA,EAAS,GAAKsH,EAAS,IAAOA,EAAS3D,KAAK3D,OACrE,MAAM,IAAIuD,WAAW,0CAGlBc,IAAUA,EAAW,QAG1B,IADA,IAAIgB,GAAc,IAEhB,OAAQhB,GACN,IAAK,MACH,OAAOgD,EAAS1D,KAAMS,EAAQkD,EAAQtH,GAExC,IAAK,OACL,IAAK,QACH,OAAO6H,EAAUlE,KAAMS,EAAQkD,EAAQtH,GAEzC,IAAK,QACH,OAAO+H,EAAWpE,KAAMS,EAAQkD,EAAQtH,GAE1C,IAAK,SACL,IAAK,SACH,OAAOoI,EAAYzE,KAAMS,EAAQkD,EAAQtH,GAE3C,IAAK,SAEH,OAAOqI,EAAY1E,KAAMS,EAAQkD,EAAQtH,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOsI,EAAU3E,KAAMS,EAAQkD,EAAQtH,GAEzC,QACE,GAAIqF,EAAa,MAAM,IAAIxB,UAAU,qBAAuBQ,GAC5DA,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,IAKtBrH,EAAOb,UAAU2O,OAAS,WACxB,MAAO,CACLtO,KAAM,SACNmB,KAAMoN,MAAM5O,UAAUsH,MAAM/I,KAAKiI,KAAKqI,MAAQrI,KAAM,KA4GxD,SAASmC,EAAYkB,EAAKtB,EAAOC,GAC/B,IAAIsG,EAAM,GACVtG,EAAMnH,KAAKoK,IAAI5B,EAAIhH,OAAQ2F,GAE3B,IAAK,IAAIpK,EAAImK,EAAOnK,EAAIoK,IAAOpK,EAC7B0Q,GAAOnF,OAAOwC,aAAsB,IAATtC,EAAIzL,IAEjC,OAAO0Q,EAGT,SAASlG,EAAaiB,EAAKtB,EAAOC,GAChC,IAAIsG,EAAM,GACVtG,EAAMnH,KAAKoK,IAAI5B,EAAIhH,OAAQ2F,GAE3B,IAAK,IAAIpK,EAAImK,EAAOnK,EAAIoK,IAAOpK,EAC7B0Q,GAAOnF,OAAOwC,aAAatC,EAAIzL,IAEjC,OAAO0Q,EAGT,SAASrG,EAAUoB,EAAKtB,EAAOC,GAC7B,IAAIhI,EAAMqJ,EAAIhH,SAET0F,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMhI,KAAKgI,EAAMhI,GAGxC,IADA,IAAIuO,EAAM,GACD3Q,EAAImK,EAAOnK,EAAIoK,IAAOpK,EAC7B2Q,GAAOC,EAAMnF,EAAIzL,IAEnB,OAAO2Q,EAGT,SAASjG,EAAce,EAAKtB,EAAOC,GAGjC,IAFA,IAAIyG,EAAQpF,EAAIvC,MAAMiB,EAAOC,GACzBkD,EAAM,GACDtN,EAAI,EAAGA,EAAI6Q,EAAMpM,OAAQzE,GAAK,EACrCsN,GAAO/B,OAAOwC,aAAa8C,EAAM7Q,GAAoB,IAAf6Q,EAAM7Q,EAAI,IAElD,OAAOsN,EA0CT,SAASwD,EAAa/E,EAAQgF,EAAKtM,GACjC,GAAKsH,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAI/D,WAAW,sBAC3D,GAAI+D,EAASgF,EAAMtM,EAAQ,MAAM,IAAIuD,WAAW,yCA+JlD,SAASgJ,EAAUvF,EAAKxK,EAAO8K,EAAQgF,EAAKlB,EAAKxC,GAC/C,IAAK5K,EAAO4G,SAASoC,GAAM,MAAM,IAAInD,UAAU,+CAC/C,GAAIrH,EAAQ4O,GAAO5O,EAAQoM,EAAK,MAAM,IAAIrF,WAAW,qCACrD,GAAI+D,EAASgF,EAAMtF,EAAIhH,OAAQ,MAAM,IAAIuD,WAAW,sBAkDtD,SAASiJ,EAAmBxF,EAAKxK,EAAO8K,EAAQmF,GAC1CjQ,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIjB,EAAI,EAAG6L,EAAI5I,KAAKoK,IAAI5B,EAAIhH,OAASsH,EAAQ,GAAI/L,EAAI6L,IAAK7L,EAC7DyL,EAAIM,EAAS/L,IAAMiB,EAAS,KAAS,GAAKiQ,EAAelR,EAAI,EAAIA,MAClC,GAA5BkR,EAAelR,EAAI,EAAIA,GA8B9B,SAASmR,EAAmB1F,EAAKxK,EAAO8K,EAAQmF,GAC1CjQ,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIjB,EAAI,EAAG6L,EAAI5I,KAAKoK,IAAI5B,EAAIhH,OAASsH,EAAQ,GAAI/L,EAAI6L,IAAK7L,EAC7DyL,EAAIM,EAAS/L,GAAMiB,IAAuC,GAA5BiQ,EAAelR,EAAI,EAAIA,GAAU,IAmJnE,SAASoR,EAAc3F,EAAKxK,EAAO8K,EAAQgF,EAAKlB,EAAKxC,GACnD,GAAItB,EAASgF,EAAMtF,EAAIhH,OAAQ,MAAM,IAAIuD,WAAW,sBACpD,GAAI+D,EAAS,EAAG,MAAM,IAAI/D,WAAW,sBAGvC,SAASqJ,EAAY5F,EAAKxK,EAAO8K,EAAQmF,EAAcI,GAKrD,OAJKA,GACHF,EAAa3F,EAAKxK,EAAO8K,EAAQ,GAEnCrE,EAAQuB,MAAMwC,EAAKxK,EAAO8K,EAAQmF,EAAc,GAAI,GAC7CnF,EAAS,EAWlB,SAASwF,EAAa9F,EAAKxK,EAAO8K,EAAQmF,EAAcI,GAKtD,OAJKA,GACHF,EAAa3F,EAAKxK,EAAO8K,EAAQ,GAEnCrE,EAAQuB,MAAMwC,EAAKxK,EAAO8K,EAAQmF,EAAc,GAAI,GAC7CnF,EAAS,EA/clBtJ,EAAOb,UAAUsH,MAAQ,SAAgBiB,EAAOC,GAC9C,IAoBIoH,EApBApP,EAAMgG,KAAK3D,OAqBf,IApBA0F,IAAUA,GAGE,GACVA,GAAS/H,GACG,IAAG+H,EAAQ,GACdA,EAAQ/H,IACjB+H,EAAQ/H,IANVgI,OAAc1E,IAAR0E,EAAoBhI,IAAQgI,GASxB,GACRA,GAAOhI,GACG,IAAGgI,EAAM,GACVA,EAAMhI,IACfgI,EAAMhI,GAGJgI,EAAMD,IAAOC,EAAMD,GAGnB1H,EAAOoF,qBACT2J,EAASpJ,KAAKmG,SAASpE,EAAOC,IACvBnC,UAAYxF,EAAOb,cACrB,CACL,IAAI6P,EAAWrH,EAAMD,EACrBqH,EAAS,IAAI/O,EAAOgP,OAAU/L,GAC9B,IAAK,IAAI1F,EAAI,EAAGA,EAAIyR,IAAYzR,EAC9BwR,EAAOxR,GAAKoI,KAAKpI,EAAImK,GAIzB,OAAOqH,GAWT/O,EAAOb,UAAU8P,WAAa,SAAqB3F,EAAQrD,EAAY4I,GACrEvF,GAAkB,EAClBrD,GAA0B,EACrB4I,GAAUR,EAAY/E,EAAQrD,EAAYN,KAAK3D,QAKpD,IAHA,IAAIgF,EAAMrB,KAAK2D,GACX4F,EAAM,EACN3R,EAAI,IACCA,EAAI0I,IAAeiJ,GAAO,MACjClI,GAAOrB,KAAK2D,EAAS/L,GAAK2R,EAG5B,OAAOlI,GAGThH,EAAOb,UAAUgQ,WAAa,SAAqB7F,EAAQrD,EAAY4I,GACrEvF,GAAkB,EAClBrD,GAA0B,EACrB4I,GACHR,EAAY/E,EAAQrD,EAAYN,KAAK3D,QAKvC,IAFA,IAAIgF,EAAMrB,KAAK2D,IAAWrD,GACtBiJ,EAAM,EACHjJ,EAAa,IAAMiJ,GAAO,MAC/BlI,GAAOrB,KAAK2D,IAAWrD,GAAciJ,EAGvC,OAAOlI,GAGThH,EAAOb,UAAUiQ,UAAY,SAAoB9F,EAAQuF,GAEvD,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpC2D,KAAK2D,IAGdtJ,EAAOb,UAAUkQ,aAAe,SAAuB/F,EAAQuF,GAE7D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpC2D,KAAK2D,GAAW3D,KAAK2D,EAAS,IAAM,GAG7CtJ,EAAOb,UAAU8J,aAAe,SAAuBK,EAAQuF,GAE7D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACnC2D,KAAK2D,IAAW,EAAK3D,KAAK2D,EAAS,IAG7CtJ,EAAOb,UAAUmQ,aAAe,SAAuBhG,EAAQuF,GAG7D,OAFKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,SAElC2D,KAAK2D,GACT3D,KAAK2D,EAAS,IAAM,EACpB3D,KAAK2D,EAAS,IAAM,IACD,SAAnB3D,KAAK2D,EAAS,IAGrBtJ,EAAOb,UAAUoQ,aAAe,SAAuBjG,EAAQuF,GAG7D,OAFKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QAEpB,SAAf2D,KAAK2D,IACT3D,KAAK2D,EAAS,IAAM,GACrB3D,KAAK2D,EAAS,IAAM,EACrB3D,KAAK2D,EAAS,KAGlBtJ,EAAOb,UAAUqQ,UAAY,SAAoBlG,EAAQrD,EAAY4I,GACnEvF,GAAkB,EAClBrD,GAA0B,EACrB4I,GAAUR,EAAY/E,EAAQrD,EAAYN,KAAK3D,QAKpD,IAHA,IAAIgF,EAAMrB,KAAK2D,GACX4F,EAAM,EACN3R,EAAI,IACCA,EAAI0I,IAAeiJ,GAAO,MACjClI,GAAOrB,KAAK2D,EAAS/L,GAAK2R,EAM5B,OAFIlI,IAFJkI,GAAO,OAESlI,GAAOxG,KAAKiP,IAAI,EAAG,EAAIxJ,IAEhCe,GAGThH,EAAOb,UAAUuQ,UAAY,SAAoBpG,EAAQrD,EAAY4I,GACnEvF,GAAkB,EAClBrD,GAA0B,EACrB4I,GAAUR,EAAY/E,EAAQrD,EAAYN,KAAK3D,QAKpD,IAHA,IAAIzE,EAAI0I,EACJiJ,EAAM,EACNlI,EAAMrB,KAAK2D,IAAW/L,GACnBA,EAAI,IAAM2R,GAAO,MACtBlI,GAAOrB,KAAK2D,IAAW/L,GAAK2R,EAM9B,OAFIlI,IAFJkI,GAAO,OAESlI,GAAOxG,KAAKiP,IAAI,EAAG,EAAIxJ,IAEhCe,GAGThH,EAAOb,UAAUwQ,SAAW,SAAmBrG,EAAQuF,GAErD,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACtB,IAAf2D,KAAK2D,IAC0B,GAA5B,IAAO3D,KAAK2D,GAAU,GADK3D,KAAK2D,IAI3CtJ,EAAOb,UAAUyQ,YAAc,SAAsBtG,EAAQuF,GACtDA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QAC3C,IAAIgF,EAAMrB,KAAK2D,GAAW3D,KAAK2D,EAAS,IAAM,EAC9C,OAAc,MAANtC,EAAsB,WAANA,EAAmBA,GAG7ChH,EAAOb,UAAU0Q,YAAc,SAAsBvG,EAAQuF,GACtDA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QAC3C,IAAIgF,EAAMrB,KAAK2D,EAAS,GAAM3D,KAAK2D,IAAW,EAC9C,OAAc,MAANtC,EAAsB,WAANA,EAAmBA,GAG7ChH,EAAOb,UAAU2Q,YAAc,SAAsBxG,EAAQuF,GAG3D,OAFKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QAEnC2D,KAAK2D,GACV3D,KAAK2D,EAAS,IAAM,EACpB3D,KAAK2D,EAAS,IAAM,GACpB3D,KAAK2D,EAAS,IAAM,IAGzBtJ,EAAOb,UAAU4Q,YAAc,SAAsBzG,EAAQuF,GAG3D,OAFKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QAEnC2D,KAAK2D,IAAW,GACrB3D,KAAK2D,EAAS,IAAM,GACpB3D,KAAK2D,EAAS,IAAM,EACpB3D,KAAK2D,EAAS,IAGnBtJ,EAAOb,UAAU6Q,YAAc,SAAsB1G,EAAQuF,GAE3D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpCiD,EAAQ8D,KAAKpD,KAAM2D,GAAQ,EAAM,GAAI,IAG9CtJ,EAAOb,UAAU8Q,YAAc,SAAsB3G,EAAQuF,GAE3D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpCiD,EAAQ8D,KAAKpD,KAAM2D,GAAQ,EAAO,GAAI,IAG/CtJ,EAAOb,UAAU+Q,aAAe,SAAuB5G,EAAQuF,GAE7D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpCiD,EAAQ8D,KAAKpD,KAAM2D,GAAQ,EAAM,GAAI,IAG9CtJ,EAAOb,UAAUgR,aAAe,SAAuB7G,EAAQuF,GAE7D,OADKA,GAAUR,EAAY/E,EAAQ,EAAG3D,KAAK3D,QACpCiD,EAAQ8D,KAAKpD,KAAM2D,GAAQ,EAAO,GAAI,IAS/CtJ,EAAOb,UAAUiR,YAAc,SAAsB5R,EAAO8K,EAAQrD,EAAY4I,IAC9ErQ,GAASA,EACT8K,GAAkB,EAClBrD,GAA0B,EACrB4I,IAEHN,EAAS5I,KAAMnH,EAAO8K,EAAQrD,EADfzF,KAAKiP,IAAI,EAAG,EAAIxJ,GAAc,EACO,GAGtD,IAAIiJ,EAAM,EACN3R,EAAI,EAER,IADAoI,KAAK2D,GAAkB,IAAR9K,IACNjB,EAAI0I,IAAeiJ,GAAO,MACjCvJ,KAAK2D,EAAS/L,GAAMiB,EAAQ0Q,EAAO,IAGrC,OAAO5F,EAASrD,GAGlBjG,EAAOb,UAAUkR,YAAc,SAAsB7R,EAAO8K,EAAQrD,EAAY4I,IAC9ErQ,GAASA,EACT8K,GAAkB,EAClBrD,GAA0B,EACrB4I,IAEHN,EAAS5I,KAAMnH,EAAO8K,EAAQrD,EADfzF,KAAKiP,IAAI,EAAG,EAAIxJ,GAAc,EACO,GAGtD,IAAI1I,EAAI0I,EAAa,EACjBiJ,EAAM,EAEV,IADAvJ,KAAK2D,EAAS/L,GAAa,IAARiB,IACVjB,GAAK,IAAM2R,GAAO,MACzBvJ,KAAK2D,EAAS/L,GAAMiB,EAAQ0Q,EAAO,IAGrC,OAAO5F,EAASrD,GAGlBjG,EAAOb,UAAUmR,WAAa,SAAqB9R,EAAO8K,EAAQuF,GAMhE,OALArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,IAAM,GACjDtJ,EAAOoF,sBAAqB5G,EAAQgC,KAAKC,MAAMjC,IACpDmH,KAAK2D,GAAmB,IAAR9K,EACT8K,EAAS,GAWlBtJ,EAAOb,UAAUoR,cAAgB,SAAwB/R,EAAO8K,EAAQuF,GAUtE,OATArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,MAAQ,GACpDtJ,EAAOoF,qBACTO,KAAK2D,GAAmB,IAAR9K,EAChBmH,KAAK2D,EAAS,GAAM9K,IAAU,GAE9BgQ,EAAkB7I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAUqR,cAAgB,SAAwBhS,EAAO8K,EAAQuF,GAUtE,OATArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,MAAQ,GACpDtJ,EAAOoF,qBACTO,KAAK2D,GAAW9K,IAAU,EAC1BmH,KAAK2D,EAAS,GAAc,IAAR9K,GAEpBgQ,EAAkB7I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAUlBtJ,EAAOb,UAAUsR,cAAgB,SAAwBjS,EAAO8K,EAAQuF,GAYtE,OAXArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,WAAY,GACxDtJ,EAAOoF,qBACTO,KAAK2D,EAAS,GAAM9K,IAAU,GAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,GAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,EAC9BmH,KAAK2D,GAAmB,IAAR9K,GAEhBkQ,EAAkB/I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAUuR,cAAgB,SAAwBlS,EAAO8K,EAAQuF,GAYtE,OAXArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,WAAY,GACxDtJ,EAAOoF,qBACTO,KAAK2D,GAAW9K,IAAU,GAC1BmH,KAAK2D,EAAS,GAAM9K,IAAU,GAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,EAC9BmH,KAAK2D,EAAS,GAAc,IAAR9K,GAEpBkQ,EAAkB/I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAUwR,WAAa,SAAqBnS,EAAO8K,EAAQrD,EAAY4I,GAG5E,GAFArQ,GAASA,EACT8K,GAAkB,GACbuF,EAAU,CACb,IAAI+B,EAAQpQ,KAAKiP,IAAI,EAAG,EAAIxJ,EAAa,GAEzCsI,EAAS5I,KAAMnH,EAAO8K,EAAQrD,EAAY2K,EAAQ,GAAIA,GAGxD,IAAIrT,EAAI,EACJ2R,EAAM,EACN2B,EAAM,EAEV,IADAlL,KAAK2D,GAAkB,IAAR9K,IACNjB,EAAI0I,IAAeiJ,GAAO,MAC7B1Q,EAAQ,GAAa,IAARqS,GAAsC,IAAzBlL,KAAK2D,EAAS/L,EAAI,KAC9CsT,EAAM,GAERlL,KAAK2D,EAAS/L,IAAOiB,EAAQ0Q,GAAQ,GAAK2B,EAAM,IAGlD,OAAOvH,EAASrD,GAGlBjG,EAAOb,UAAU2R,WAAa,SAAqBtS,EAAO8K,EAAQrD,EAAY4I,GAG5E,GAFArQ,GAASA,EACT8K,GAAkB,GACbuF,EAAU,CACb,IAAI+B,EAAQpQ,KAAKiP,IAAI,EAAG,EAAIxJ,EAAa,GAEzCsI,EAAS5I,KAAMnH,EAAO8K,EAAQrD,EAAY2K,EAAQ,GAAIA,GAGxD,IAAIrT,EAAI0I,EAAa,EACjBiJ,EAAM,EACN2B,EAAM,EAEV,IADAlL,KAAK2D,EAAS/L,GAAa,IAARiB,IACVjB,GAAK,IAAM2R,GAAO,MACrB1Q,EAAQ,GAAa,IAARqS,GAAsC,IAAzBlL,KAAK2D,EAAS/L,EAAI,KAC9CsT,EAAM,GAERlL,KAAK2D,EAAS/L,IAAOiB,EAAQ0Q,GAAQ,GAAK2B,EAAM,IAGlD,OAAOvH,EAASrD,GAGlBjG,EAAOb,UAAU4R,UAAY,SAAoBvS,EAAO8K,EAAQuF,GAO9D,OANArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,KAAO,KAClDtJ,EAAOoF,sBAAqB5G,EAAQgC,KAAKC,MAAMjC,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCmH,KAAK2D,GAAmB,IAAR9K,EACT8K,EAAS,GAGlBtJ,EAAOb,UAAU6R,aAAe,SAAuBxS,EAAO8K,EAAQuF,GAUpE,OATArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,OAAS,OACrDtJ,EAAOoF,qBACTO,KAAK2D,GAAmB,IAAR9K,EAChBmH,KAAK2D,EAAS,GAAM9K,IAAU,GAE9BgQ,EAAkB7I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAU8R,aAAe,SAAuBzS,EAAO8K,EAAQuF,GAUpE,OATArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,OAAS,OACrDtJ,EAAOoF,qBACTO,KAAK2D,GAAW9K,IAAU,EAC1BmH,KAAK2D,EAAS,GAAc,IAAR9K,GAEpBgQ,EAAkB7I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAU+R,aAAe,SAAuB1S,EAAO8K,EAAQuF,GAYpE,OAXArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,YAAa,YACzDtJ,EAAOoF,qBACTO,KAAK2D,GAAmB,IAAR9K,EAChBmH,KAAK2D,EAAS,GAAM9K,IAAU,EAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,GAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,IAE9BkQ,EAAkB/I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAGlBtJ,EAAOb,UAAUgS,aAAe,SAAuB3S,EAAO8K,EAAQuF,GAapE,OAZArQ,GAASA,EACT8K,GAAkB,EACbuF,GAAUN,EAAS5I,KAAMnH,EAAO8K,EAAQ,EAAG,YAAa,YACzD9K,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCwB,EAAOoF,qBACTO,KAAK2D,GAAW9K,IAAU,GAC1BmH,KAAK2D,EAAS,GAAM9K,IAAU,GAC9BmH,KAAK2D,EAAS,GAAM9K,IAAU,EAC9BmH,KAAK2D,EAAS,GAAc,IAAR9K,GAEpBkQ,EAAkB/I,KAAMnH,EAAO8K,GAAQ,GAElCA,EAAS,GAgBlBtJ,EAAOb,UAAUiS,aAAe,SAAuB5S,EAAO8K,EAAQuF,GACpE,OAAOD,EAAWjJ,KAAMnH,EAAO8K,GAAQ,EAAMuF,IAG/C7O,EAAOb,UAAUkS,aAAe,SAAuB7S,EAAO8K,EAAQuF,GACpE,OAAOD,EAAWjJ,KAAMnH,EAAO8K,GAAQ,EAAOuF,IAWhD7O,EAAOb,UAAUmS,cAAgB,SAAwB9S,EAAO8K,EAAQuF,GACtE,OAAOC,EAAYnJ,KAAMnH,EAAO8K,GAAQ,EAAMuF,IAGhD7O,EAAOb,UAAUoS,cAAgB,SAAwB/S,EAAO8K,EAAQuF,GACtE,OAAOC,EAAYnJ,KAAMnH,EAAO8K,GAAQ,EAAOuF,IAIjD7O,EAAOb,UAAU2H,KAAO,SAAeyG,EAAQiE,EAAa9J,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMhC,KAAK3D,QAC9BwP,GAAejE,EAAOvL,SAAQwP,EAAcjE,EAAOvL,QAClDwP,IAAaA,EAAc,GAC5B7J,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB6F,EAAOvL,QAAgC,IAAhB2D,KAAK3D,OAAc,OAAO,EAGrD,GAAIwP,EAAc,EAChB,MAAM,IAAIjM,WAAW,6BAEvB,GAAImC,EAAQ,GAAKA,GAAS/B,KAAK3D,OAAQ,MAAM,IAAIuD,WAAW,6BAC5D,GAAIoC,EAAM,EAAG,MAAM,IAAIpC,WAAW,2BAG9BoC,EAAMhC,KAAK3D,SAAQ2F,EAAMhC,KAAK3D,QAC9BuL,EAAOvL,OAASwP,EAAc7J,EAAMD,IACtCC,EAAM4F,EAAOvL,OAASwP,EAAc9J,GAGtC,IACInK,EADAoC,EAAMgI,EAAMD,EAGhB,GAAI/B,OAAS4H,GAAU7F,EAAQ8J,GAAeA,EAAc7J,EAE1D,IAAKpK,EAAIoC,EAAM,EAAGpC,GAAK,IAAKA,EAC1BgQ,EAAOhQ,EAAIiU,GAAe7L,KAAKpI,EAAImK,QAEhC,GAAI/H,EAAM,MAASK,EAAOoF,oBAE/B,IAAK7H,EAAI,EAAGA,EAAIoC,IAAOpC,EACrBgQ,EAAOhQ,EAAIiU,GAAe7L,KAAKpI,EAAImK,QAGrC3H,WAAWZ,UAAUsS,IAAI/T,KACvB6P,EACA5H,KAAKmG,SAASpE,EAAOA,EAAQ/H,GAC7B6R,GAIJ,OAAO7R,GAOTK,EAAOb,UAAUiN,KAAO,SAAepF,EAAKU,EAAOC,EAAKtB,GAEtD,GAAmB,iBAARW,EAAkB,CAS3B,GARqB,iBAAVU,GACTrB,EAAWqB,EACXA,EAAQ,EACRC,EAAMhC,KAAK3D,QACa,iBAAR2F,IAChBtB,EAAWsB,EACXA,EAAMhC,KAAK3D,QAEM,IAAfgF,EAAIhF,OAAc,CACpB,IAAI0P,EAAO1K,EAAIkD,WAAW,GACtBwH,EAAO,MACT1K,EAAM0K,GAGV,QAAiBzO,IAAboD,GAA8C,iBAAbA,EACnC,MAAM,IAAIR,UAAU,6BAEtB,GAAwB,iBAAbQ,IAA0BrG,EAAOsG,WAAWD,GACrD,MAAM,IAAIR,UAAU,qBAAuBQ,OAErB,iBAARW,IAChBA,GAAY,KAId,GAAIU,EAAQ,GAAK/B,KAAK3D,OAAS0F,GAAS/B,KAAK3D,OAAS2F,EACpD,MAAM,IAAIpC,WAAW,sBAGvB,GAAIoC,GAAOD,EACT,OAAO/B,KAQT,IAAIpI,EACJ,GANAmK,KAAkB,EAClBC,OAAc1E,IAAR0E,EAAoBhC,KAAK3D,OAAS2F,IAAQ,EAE3CX,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKzJ,EAAImK,EAAOnK,EAAIoK,IAAOpK,EACzBoI,KAAKpI,GAAKyJ,MAEP,CACL,IAAIoH,EAAQpO,EAAO4G,SAASI,GACxBA,EACAM,EAAY,IAAItH,EAAOgH,EAAKX,GAAUhG,YACtCV,EAAMyO,EAAMpM,OAChB,IAAKzE,EAAI,EAAGA,EAAIoK,EAAMD,IAASnK,EAC7BoI,KAAKpI,EAAImK,GAAS0G,EAAM7Q,EAAIoC,GAIhC,OAAOgG,MAMT,IAAIgM,EAAoB,qBAmBxB,SAASxD,EAAOnP,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAEqB,SAAS,IAC7BrB,EAAEqB,SAAS,IAGpB,SAASiH,EAAalB,EAAQmE,GAE5B,IAAIY,EADJZ,EAAQA,GAASqH,IAMjB,IAJA,IAAI5P,EAASoE,EAAOpE,OAChB6P,EAAgB,KAChBzD,EAAQ,GAEH7Q,EAAI,EAAGA,EAAIyE,IAAUzE,EAAG,CAI/B,IAHA4N,EAAY/E,EAAO8D,WAAW3M,IAGd,OAAU4N,EAAY,MAAQ,CAE5C,IAAK0G,EAAe,CAElB,GAAI1G,EAAY,MAAQ,EAEjBZ,GAAS,IAAM,GAAG6D,EAAMnE,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI1M,EAAI,IAAMyE,EAAQ,EAEtBuI,GAAS,IAAM,GAAG6D,EAAMnE,KAAK,IAAM,IAAM,KAC9C,SAIF4H,EAAgB1G,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBZ,GAAS,IAAM,GAAG6D,EAAMnE,KAAK,IAAM,IAAM,KAC9C4H,EAAgB1G,EAChB,SAIFA,EAAkE,OAArD0G,EAAgB,OAAU,GAAK1G,EAAY,YAC/C0G,IAEJtH,GAAS,IAAM,GAAG6D,EAAMnE,KAAK,IAAM,IAAM,KAMhD,GAHA4H,EAAgB,KAGZ1G,EAAY,IAAM,CACpB,IAAKZ,GAAS,GAAK,EAAG,MACtB6D,EAAMnE,KAAKkB,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKZ,GAAS,GAAK,EAAG,MACtB6D,EAAMnE,KACJkB,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKZ,GAAS,GAAK,EAAG,MACtB6D,EAAMnE,KACJkB,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAI1L,MAAM,sBARhB,IAAK8K,GAAS,GAAK,EAAG,MACtB6D,EAAMnE,KACJkB,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOiD,EA4BT,SAAS7G,EAAezD,GACtB,OAAOkB,EAAO8M,YAhIhB,SAAsBhO,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIiO,KAAajO,EAAIiO,OAClBjO,EAAIkO,QAAQ,aAAc,IAZ3BC,CAAWnO,GAAKkO,QAAQL,EAAmB,KAEzC3P,OAAS,EAAG,MAAO,GAE3B,KAAO8B,EAAI9B,OAAS,GAAM,GACxB8B,GAAY,IAEd,OAAOA,EAuHmBoO,CAAYpO,IAGxC,SAASgG,EAAYqI,EAAKC,EAAK9I,EAAQtH,GACrC,IAAK,IAAIzE,EAAI,EAAGA,EAAIyE,KACbzE,EAAI+L,GAAU8I,EAAIpQ,QAAYzE,GAAK4U,EAAInQ,UADhBzE,EAE5B6U,EAAI7U,EAAI+L,GAAU6I,EAAI5U,GAExB,OAAOA,K,+BCvvDT,IAAI8U,EAGJA,EAAI,WACH,OAAO1M,KADJ,GAIJ,IAEC0M,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAO5P,GAEc,iBAAXvF,SAAqBkV,EAAIlV,QAOrCH,EAAOD,QAAUsV,G,6BCjBjBtV,EAAQkJ,WAuCR,SAAqBsM,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClD5V,EAAQ+U,YAiDR,SAAsBS,GACpB,IAAIK,EAcArV,EAbAiV,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvB9J,EAAM,IAAImK,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGVpT,EAAMgT,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKnV,EAAI,EAAGA,EAAIoC,EAAKpC,GAAK,EACxBqV,EACGI,EAAUT,EAAIrI,WAAW3M,KAAO,GAChCyV,EAAUT,EAAIrI,WAAW3M,EAAI,KAAO,GACpCyV,EAAUT,EAAIrI,WAAW3M,EAAI,KAAO,EACrCyV,EAAUT,EAAIrI,WAAW3M,EAAI,IAC/BmL,EAAIqK,KAAcH,GAAO,GAAM,IAC/BlK,EAAIqK,KAAcH,GAAO,EAAK,IAC9BlK,EAAIqK,KAAmB,IAANH,EAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIrI,WAAW3M,KAAO,EAChCyV,EAAUT,EAAIrI,WAAW3M,EAAI,KAAO,EACvCmL,EAAIqK,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIrI,WAAW3M,KAAO,GAChCyV,EAAUT,EAAIrI,WAAW3M,EAAI,KAAO,EACpCyV,EAAUT,EAAIrI,WAAW3M,EAAI,KAAO,EACvCmL,EAAIqK,KAAcH,GAAO,EAAK,IAC9BlK,EAAIqK,KAAmB,IAANH,GAGnB,OAAOlK,GA3FT3L,EAAQ4N,cAkHR,SAAwBsI,GAQtB,IAPA,IAAIL,EACAjT,EAAMsT,EAAMjR,OACZkR,EAAavT,EAAM,EACnBwT,EAAQ,GAIH5V,EAAI,EAAG6V,EAAOzT,EAAMuT,EAAY3V,EAAI6V,EAAM7V,GAH9B,MAInB4V,EAAMlJ,KAAKoJ,EACTJ,EAAO1V,EAAIA,EALM,MAKgB6V,EAAOA,EAAQ7V,EAL/B,QAUF,IAAf2V,GACFN,EAAMK,EAAMtT,EAAM,GAClBwT,EAAMlJ,KACJqJ,EAAOV,GAAO,GACdU,EAAQV,GAAO,EAAK,IACpB,OAEsB,IAAfM,IACTN,GAAOK,EAAMtT,EAAM,IAAM,GAAKsT,EAAMtT,EAAM,GAC1CwT,EAAMlJ,KACJqJ,EAAOV,GAAO,IACdU,EAAQV,GAAO,EAAK,IACpBU,EAAQV,GAAO,EAAK,IACpB,MAIJ,OAAOO,EAAM7F,KAAK,KA3IpB,IALA,IAAIgG,EAAS,GACTN,EAAY,GACZH,EAA4B,oBAAf9S,WAA6BA,WAAagO,MAEvD2D,EAAO,mEACFnU,EAAI,EAAGoC,EAAM+R,EAAK1P,OAAQzE,EAAIoC,IAAOpC,EAC5C+V,EAAO/V,GAAKmU,EAAKnU,GACjByV,EAAUtB,EAAKxH,WAAW3M,IAAMA,EAQlC,SAASkV,EAASF,GAChB,IAAI5S,EAAM4S,EAAIvQ,OAEd,GAAIrC,EAAM,EAAI,EACZ,MAAM,IAAIF,MAAM,kDAKlB,IAAIiT,EAAWH,EAAI/J,QAAQ,KAO3B,OANkB,IAAdkK,IAAiBA,EAAW/S,GAMzB,CAAC+S,EAJcA,IAAa/S,EAC/B,EACA,EAAK+S,EAAW,GAsEtB,SAASW,EAAaJ,EAAOvL,EAAOC,GAGlC,IAFA,IAAIiL,EARoBW,EASpBC,EAAS,GACJjW,EAAImK,EAAOnK,EAAIoK,EAAKpK,GAAK,EAChCqV,GACIK,EAAM1V,IAAM,GAAM,WAClB0V,EAAM1V,EAAI,IAAM,EAAK,QACP,IAAf0V,EAAM1V,EAAI,IACbiW,EAAOvJ,KAdFqJ,GADiBC,EAeMX,IAdT,GAAK,IACxBU,EAAOC,GAAO,GAAK,IACnBD,EAAOC,GAAO,EAAI,IAClBD,EAAa,GAANC,IAaT,OAAOC,EAAOlG,KAAK,IAjGrB0F,EAAU,IAAI9I,WAAW,IAAM,GAC/B8I,EAAU,IAAI9I,WAAW,IAAM,I,cCnB/BnN,EAAQgM,KAAO,SAAUhC,EAAQuC,EAAQmK,EAAMC,EAAMC,GACnD,IAAIjR,EAAG/E,EACHiW,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTxW,EAAIkW,EAAQE,EAAS,EAAK,EAC1B9V,EAAI4V,GAAQ,EAAI,EAChBnU,EAAIyH,EAAOuC,EAAS/L,GAOxB,IALAA,GAAKM,EAEL6E,EAAIpD,GAAM,IAAOyU,GAAU,EAC3BzU,KAAQyU,EACRA,GAASH,EACFG,EAAQ,EAAGrR,EAAS,IAAJA,EAAWqE,EAAOuC,EAAS/L,GAAIA,GAAKM,EAAGkW,GAAS,GAKvE,IAHApW,EAAI+E,GAAM,IAAOqR,GAAU,EAC3BrR,KAAQqR,EACRA,GAASL,EACFK,EAAQ,EAAGpW,EAAS,IAAJA,EAAWoJ,EAAOuC,EAAS/L,GAAIA,GAAKM,EAAGkW,GAAS,GAEvE,GAAU,IAANrR,EACFA,EAAI,EAAIoR,MACH,IAAIpR,IAAMmR,EACf,OAAOlW,EAAIqW,IAAsBpC,KAAdtS,GAAK,EAAI,GAE5B3B,GAAQ6C,KAAKiP,IAAI,EAAGiE,GACpBhR,GAAQoR,EAEV,OAAQxU,GAAK,EAAI,GAAK3B,EAAI6C,KAAKiP,IAAI,EAAG/M,EAAIgR,IAG5C3W,EAAQyJ,MAAQ,SAAUO,EAAQvI,EAAO8K,EAAQmK,EAAMC,EAAMC,GAC3D,IAAIjR,EAAG/E,EAAGC,EACNgW,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAe,KAATP,EAAclT,KAAKiP,IAAI,GAAI,IAAMjP,KAAKiP,IAAI,GAAI,IAAM,EAC1DlS,EAAIkW,EAAO,EAAKE,EAAS,EACzB9V,EAAI4V,EAAO,GAAK,EAChBnU,EAAId,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQgC,KAAK0T,IAAI1V,GAEb8J,MAAM9J,IAAUA,IAAUoT,KAC5BjU,EAAI2K,MAAM9J,GAAS,EAAI,EACvBkE,EAAImR,IAEJnR,EAAIlC,KAAKC,MAAMD,KAAK2T,IAAI3V,GAASgC,KAAK4T,KAClC5V,GAASZ,EAAI4C,KAAKiP,IAAI,GAAI/M,IAAM,IAClCA,IACA9E,GAAK,IAGLY,GADEkE,EAAIoR,GAAS,EACNG,EAAKrW,EAELqW,EAAKzT,KAAKiP,IAAI,EAAG,EAAIqE,IAEpBlW,GAAK,IACf8E,IACA9E,GAAK,GAGH8E,EAAIoR,GAASD,GACflW,EAAI,EACJ+E,EAAImR,GACKnR,EAAIoR,GAAS,GACtBnW,GAAMa,EAAQZ,EAAK,GAAK4C,KAAKiP,IAAI,EAAGiE,GACpChR,GAAQoR,IAERnW,EAAIa,EAAQgC,KAAKiP,IAAI,EAAGqE,EAAQ,GAAKtT,KAAKiP,IAAI,EAAGiE,GACjDhR,EAAI,IAIDgR,GAAQ,EAAG3M,EAAOuC,EAAS/L,GAAS,IAAJI,EAAUJ,GAAKM,EAAGF,GAAK,IAAK+V,GAAQ,GAI3E,IAFAhR,EAAKA,GAAKgR,EAAQ/V,EAClBiW,GAAQF,EACDE,EAAO,EAAG7M,EAAOuC,EAAS/L,GAAS,IAAJmF,EAAUnF,GAAKM,EAAG6E,GAAK,IAAKkR,GAAQ,GAE1E7M,EAAOuC,EAAS/L,EAAIM,IAAU,IAAJyB,I,cClF5B,IAAIe,EAAW,GAAGA,SAElBrD,EAAOD,QAAUgR,MAAM7I,SAAW,SAAUwD,GAC1C,MAA6B,kBAAtBrI,EAAS3C,KAAKgL","file":"web-crypto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WebCrypto\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebCrypto\"] = factory();\n\telse\n\t\troot[\"WebCrypto\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Originally from https://github.com/QwantResearch/masq-common/ \n * with improvements by Andrei Sambra\n */\n\ninterface CipherData {\n  ciphertext: string;\n  iv: string;\n}\n\ninterface DerivationParams {\n  salt: string;\n  iterations: number;\n  hashAlgo: string;\n}\n\ninterface ProtectedMasterKey {\n  derivationParams: DerivationParams;\n  encryptedMasterKey: CipherData;\n}\n\nconst checkCryptokey = (key: CryptoKey) => {\n  if (!key.type || key.type !== 'secret') {\n    throw new Error('Invalid key type')\n  }\n}\n\nconst genRandomBuffer = (len = 16) => {\n  const values = window.crypto.getRandomValues(new Uint8Array(len))\n  return Buffer.from(values)\n}\n\nconst genRandomBufferAsStr = (len = 16, encodingFormat: BufferEncoding = 'hex') => {\n  if (encodingFormat) {\n    checkEncodingFormat(encodingFormat)\n  }\n  const buf = genRandomBuffer(len)\n  return buf.toString(encodingFormat)\n}\n\nconst checkPassphrase = (str: string) => {\n  if (typeof str !== 'string' || str === '') {\n    throw new Error(`Not a valid value`)\n  }\n}\n\nconst checkEncodingFormat = (format: BufferEncoding) => {\n  if (format !== 'hex' && format !== 'base64') throw new Error('Invalid encoding')\n}\n\n/**\n * Generate a random hexadecimal ID of a given length\n *\n * @param {integer} [len] The string length of the new ID\n * @returns {string} The new ID\n */\nconst genId = (len = 32) => {\n  // 2 bytes for each char\n  return genRandomBufferAsStr(Math.floor(len / 2))\n}\n\n/**\n * Generate the hash of a string or ArrayBuffer\n *\n * @param {string | arrayBuffer} data The message\n * @param {string} [format] The encoding format ('hex' by default, can also be 'base64')\n * @param {string} [name] The hashing algorithm (SHA-256 by default)\n * @returns {Promise<String>}  A promise that contains the hash as a String encoded with encodingFormat\n */\nconst hash = async (data: string | ArrayBuffer, format: BufferEncoding = 'hex', name = 'SHA-256') => {\n  const digest = await window.crypto.subtle.digest(\n    {\n      name\n    },\n    (typeof data === 'string') ? Buffer.from(data) : data\n  )\n  return Buffer.from(digest).toString(format)\n}\n\n/**\n   * Generate an ECDA key pair based on the provided curve name\n   *\n   * @param {boolean} extractable - Specify if the generated key is extractable\n   * @param {namedCurve} namedCurve - The curve name to use\n   * @returns {Promise<CryptoKey>} - A promise containing the key pair\n   */\nconst genKeyPair = (extractable = true, namedCurve = 'P-256') => {\n  return window.crypto.subtle.generateKey(\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    extractable,\n    ['sign', 'verify']\n  )\n}\n\n// Helper to correctly select return type based on format argument.\ntype KeyBufferEncoding = BufferEncoding | 'raw';\ntype SelectKeyType<TFormat extends KeyBufferEncoding> = TFormat extends 'raw' ? Uint8Array : string;\n\n/**\n  * Import a public key\n  *\n  * @param {CryptoKey} key - The public CryptoKey\n  * @param {string} namedCurve - The curve name to use\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction importPublicKey(key: string): Promise<CryptoKey>;\nfunction importPublicKey(key: string, namedCurve: string): Promise<CryptoKey>;\nfunction importPublicKey<TFormat extends KeyBufferEncoding>(key: SelectKeyType<TFormat>, namedCurve: string, format: TFormat): Promise<CryptoKey>;\n\nfunction importPublicKey(key: string | Uint8Array, namedCurve = 'P-256', format: KeyBufferEncoding = 'base64') {\n  return window.crypto.subtle.importKey(\n    'spki',\n    typeof key === 'string' ? Buffer.from(key, format as BufferEncoding) : key,\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    true,\n    ['verify']\n  )\n}\n\n/**\n  * Import a private key\n  *\n  * @param {CryptoKey} key - The private CryptoKey\n  * @param {string} namedCurve - The curve name to use\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction importPrivateKey(key: string): Promise<CryptoKey>;\nfunction importPrivateKey(key: string, namedCurve: string): Promise<CryptoKey>;\nfunction importPrivateKey<TFormat extends KeyBufferEncoding>(key: SelectKeyType<TFormat>, namedCurve: string, format: TFormat): Promise<CryptoKey>;\n\nfunction importPrivateKey(key: string | Uint8Array, namedCurve = 'P-256', format: KeyBufferEncoding = 'base64') {\n  return window.crypto.subtle.importKey(\n    'pkcs8',\n    typeof key === 'string' ? Buffer.from(key, format as BufferEncoding) : key,\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    true,\n    ['sign']\n  )\n}\n\n/**\n  * Export a public key\n  *\n  * @param {CryptoKey} key - The public CryptoKey\n  * @returns {Promise<arrayBuffer | string>} - The raw key\n  */\n\nfunction exportPublicKey(key: CryptoKey): Promise<string>;\nfunction exportPublicKey<TFormat extends KeyBufferEncoding> (key: CryptoKey, format: TFormat): Promise<SelectKeyType<TFormat>>;\n\nasync function exportPublicKey(key: CryptoKey, format: KeyBufferEncoding = 'base64') {\n  const exported = await window.crypto.subtle.exportKey('spki', key)\n  return (format === 'raw') ? new Uint8Array(exported) : Buffer.from(exported).toString(format)\n}\n\n/**\n  * Export a private key\n  *\n  * @param {CryptoKey} key - The private CryptoKey\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction exportPrivateKey(key: CryptoKey): Promise<string>;\nfunction exportPrivateKey<TFormat extends KeyBufferEncoding> (key: CryptoKey, format: TFormat): Promise<SelectKeyType<TFormat>>;\n \nasync function exportPrivateKey(key: CryptoKey, format: KeyBufferEncoding = 'base64') {\n  const exported = await window.crypto.subtle.exportKey('pkcs8', key)\n  return (format === 'raw') ? new Uint8Array(exported) : Buffer.from(exported).toString(format)\n}\n\n/**\n * Sign data using the private key\n *\n * @param {CryptoKey} key - The private key\n * @param {*} data - Data to sign\n * @param {*} hash - The hashing algorithm\n * @returns {Promise<arrayBuffer>} - The raw signature\n */\nconst sign = async (key: CryptoKey, data: any, format: KeyBufferEncoding = 'base64', hash = 'SHA-256') => {\n  const signature = await window.crypto.subtle.sign(\n    {\n      name: 'ECDSA',\n      hash: { name: hash } // can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n    },\n    key,\n    Buffer.from(JSON.stringify(data))\n  )\n  return (format === 'raw') ? new Uint8Array(signature) : Buffer.from(signature).toString(format)\n}\n\n/**\n * Verify data using the public key\n *\n * @param {CryptoKey} key - The public key\n * @param {*} data - Data to verify\n * @param {*} hash - The hashing algorithm\n * @returns {Promise<boolean>} - The verification outcome\n */\nconst verify = async (key: CryptoKey, data: any, signature: string, format: BufferEncoding = 'base64', hash = 'SHA-256') => {\n  return window.crypto.subtle.verify(\n    {\n      name: 'ECDSA',\n      hash: { name: hash } // can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n    },\n    key,\n    Buffer.from(signature, format),\n    Buffer.from(JSON.stringify(data))\n  )\n}\n\n/**\n   * Generate an AES key based on the cipher mode and keysize\n   *\n   * @param {boolean} [extractable] - Specify if the generated key is extractable\n   * @param {string} [mode] - The aes mode of the generated key\n   * @param {Number} [keySize] - Specify if the generated key is extractable\n   * @returns {Promise<CryptoKey>} - The generated AES key.\n   */\nconst genAESKey = (extractable = true, mode = 'AES-GCM', keySize = 128) => {\n  return window.crypto.subtle.generateKey({\n    name: mode,\n    length: keySize\n  },\n  extractable,\n  ['decrypt', 'encrypt'])\n}\n\n/**\n    * Import a raw|jwk as a CryptoKey\n    *\n    * @param {arrayBuffer|Object} key - The key\n    * @param {string} [type] - The type of the key to import ('raw', 'jwk')\n    * @param {string} [mode] - The mode of the key to import (default 'AES-GCM')\n    * @returns {Promise<arrayBuffer>} - The cryptoKey\n    */\nconst importKey = (key: ArrayBuffer, type = 'raw', mode = 'AES-GCM') => {\n  const parsedKey = (type === 'raw') ? Buffer.from(key as unknown as string, 'base64') : key\n  return window.crypto.subtle.importKey(type, parsedKey, { name: mode }\n    , true, ['encrypt', 'decrypt'])\n}\n\n/**\n  * Export a CryptoKey into a raw|jwk key\n  *\n  * @param {CryptoKey} key - The CryptoKey\n  * @param {string} [type] - The type of the exported key: raw|jwk\n  * @returns {Promise<arrayBuffer>} - The raw key or the key as a jwk format\n  */\nconst exportKey = async (key: CryptoKey, type: 'raw' | 'pkcs8' | 'spki' | 'jwk' = 'raw') => {\n  const exportedKey = await window.crypto.subtle.exportKey(type, key)\n  return (type === 'raw') ? new Uint8Array(exportedKey as ArrayBuffer) : exportedKey as ArrayBuffer\n}\n\n/**\n   * Encrypt buffer\n   *\n   * @param {ArrayBuffer} key - The AES CryptoKey\n   * @param {ArrayBuffer} data - Data to encrypt\n   * @param {Object} cipherContext - The AES cipher parameters\n   * @returns {ArrayBuffer} - The encrypted buffer\n   */\nconst encryptBuffer = async <TCipherContext extends Algorithm>(key: CryptoKey, data: Buffer, cipherContext: TCipherContext) => {\n  const encrypted = await window.crypto.subtle.encrypt(cipherContext, key, data)\n  return new Uint8Array(encrypted)\n}\n\n/**\n * Decrypt buffer\n * @param {ArrayBuffer} key - The AES CryptoKey\n * @param {ArrayBuffer} data - Data to decrypt\n * @param {Object} cipherContext - The AES cipher parameters\n * @returns {Promise<ArrayBuffer>} - The decrypted buffer\n */\nconst decryptBuffer = async <TCipherContext extends Algorithm>(key: CryptoKey, data: ArrayBuffer, cipherContext: TCipherContext) => {\n  // TODO: test input params\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(cipherContext, key, data)\n    return new Uint8Array(decrypted)\n  } catch (e) {\n    if (e.message === 'Unsupported state or unable to authenticate data') {\n      throw new Error('Unable to decrypt data')\n    }\n  }\n}\n\n/**\n * Encrypt data\n *\n * @param {CryptoKey} key - The AES CryptoKey\n * @param {string | Object} - The data to encrypt\n * @param {string} [format] - The ciphertext and iv encoding format\n * @returns {Object} - The stringified ciphertext object (ciphertext and iv)\n */\nconst encrypt = async (key: CryptoKey, data: string | object, format: BufferEncoding = 'hex'): Promise<CipherData> => {\n  checkCryptokey(key)\n  const context = {\n    iv: genRandomBuffer(key.algorithm.name === 'AES-GCM' ? 12 : 16),\n    plaintext: Buffer.from(JSON.stringify(data))\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n\n  const encrypted = await encryptBuffer(key, context.plaintext, cipherContext)\n  return {\n    ciphertext: Buffer.from(encrypted).toString(format),\n    iv: Buffer.from(context.iv).toString(format)\n  }\n}\n\n/**\n   * Decrypt data\n   *\n   * @param {CryptoKey} key - The AES CryptoKey\n   * @param {string | Object} - The data to decrypt\n   * @param {string} [format] - The ciphertext and iv encoding format\n   */\nconst decrypt = async (key: CryptoKey, ciphertext: CipherData, format: BufferEncoding = 'hex') => {\n  checkCryptokey(key)\n\n  const context = {\n    ciphertext: Buffer.from(Object.prototype.hasOwnProperty.call(ciphertext, 'ciphertext') ? ciphertext.ciphertext : '', (format)),\n    // IV is 128 bits long === 16 bytes\n    iv: Object.prototype.hasOwnProperty.call(ciphertext, 'iv') ? Buffer.from(ciphertext.iv, (format)) : ''\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n  try {\n    const decrypted = await decryptBuffer(key, context.ciphertext, cipherContext)\n    if (decrypted === undefined) {\n      throw new Error();\n    }\n    return JSON.parse(Buffer.from(decrypted).toString())\n  } catch (error) {\n    throw new Error('Unable to decrypt data')\n  }\n}\n\n/**\n * Generate a PBKDF2 derived key (bits) based on user given passPhrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation\n * @returns {Promise<Uint8Array>} A promise that contains the derived key\n */\nconst deriveBits = async (passPhrase: string | ArrayBuffer, salt: ArrayBuffer, iterations: number, hashAlgo: string) => {\n  // Always specify a strong salt\n  if (iterations < 10000) { console.warn('Less than 10000 :(') }\n\n  const baseKey = await window.crypto.subtle.importKey(\n    'raw',\n    (typeof passPhrase === 'string') ? Buffer.from(passPhrase) : passPhrase,\n    'PBKDF2',\n    false,\n    ['deriveBits', 'deriveKey']\n  )\n  const derivedKey = await window.crypto.subtle.deriveBits({\n    name: 'PBKDF2',\n    salt: salt || new Uint8Array([]),\n    iterations: iterations || 100000,\n    hash: hashAlgo || 'SHA-256'\n  }, baseKey, 128)\n\n  return new Uint8Array(derivedKey)\n}\n\n/**\n * Derive a key based on a given passphrase\n *\n * @param {string} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<keyEncryptionKey>} A promise that contains the derived key and derivation\n * parameters\n */\nconst deriveKeyFromPassphrase = async (passPhrase: string, salt = genRandomBuffer(16), iterations = 100000, hashAlgo: string = 'SHA-256') => {\n  checkPassphrase(passPhrase)\n\n  const derivedKey = await deriveBits(passPhrase, salt, iterations, hashAlgo)\n  const key = await importKey(derivedKey)\n  return {\n    derivationParams: {\n      salt: Buffer.from(salt).toString('hex'),\n      iterations,\n      hashAlgo\n    },\n    key\n  }\n}\n\n/**\n * Derive the passphrase with PBKDF2 to obtain a KEK\n * Generate a AES key (masterKey)\n * Encrypt the masterKey with the KEK\n *\n * @param {string} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>} A promise that contains the encrypted derived key\n */\nconst genEncryptedMasterKey = async (passPhrase: string, salt?: Buffer, iterations?: number, hashAlgo?: string): Promise<ProtectedMasterKey> => {\n  // derive key encryption key from passphrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(passPhrase, salt, iterations, hashAlgo)\n\n  // Generate the masterKey\n  const masterKey = genRandomBufferAsStr(32, 'hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, masterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Update the derived encryption key (KEK) based on the new passphrase from user, while retaining\n * the symmetric key that encrypts data at rest\n *\n * @param {string} currentPassPhrase The current (old) passphrase that is used to derive the key\n * @param {string} newPassPhrase The new passphrase that will be used to derive the key\n * @param {oldMasterKey} oldMasterKey - The old object returned by genEncryptedMasterKey for the old passphrase\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>}\n */\nconst updatePassphraseKey = async (currentPassPhrase: string, newPassPhrase: string, oldMasterKey: ProtectedMasterKey, salt?: Buffer, iterations?: number, hashAlgo?: string): Promise<ProtectedMasterKey> => {\n  const masterKey = await decryptMasterKey(currentPassPhrase, oldMasterKey)\n  // derive a new key encryption key from newPassPhrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(newPassPhrase, salt, iterations, hashAlgo)\n\n  // enconde existing masterKey as a hex string since it's a buffer\n  const toBeEncryptedMasterKey = Buffer.from(await exportKey(masterKey)).toString('hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, toBeEncryptedMasterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Decrypt a master key by deriving the encryption key from the\n * provided passphrase and encrypted master key.\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {protectedMasterKey} protectedMasterKey - The same object returned\n * by genEncryptedMasterKey\n * @returns {Promise<masterKey>} A promise that contains the masterKey\n */\nconst decryptMasterKey = async (passPhrase: string, protectedMasterKey: ProtectedMasterKey) => {\n  if (!protectedMasterKey.encryptedMasterKey ||\n    !protectedMasterKey.derivationParams) {\n    throw new Error('Missing properties from master key')\n  }\n  const { derivationParams, encryptedMasterKey } = protectedMasterKey\n  const { salt, iterations, hashAlgo } = derivationParams\n  const _salt = typeof (salt) === 'string' ? Buffer.from(salt, ('hex')) : salt\n  const derivedKey = await deriveBits(passPhrase, _salt, iterations, hashAlgo)\n  const keyEncryptionKey = await importKey(derivedKey)\n  try {\n    const decryptedMasterKeyHex = await decrypt(keyEncryptionKey, encryptedMasterKey)\n    // return decryptedMasterKeyHex\n    const parsedKey = Buffer.from(decryptedMasterKeyHex, 'hex')\n    return window.crypto.subtle.importKey('raw', parsedKey, { name: 'AES-GCM' }\n      , true, ['encrypt', 'decrypt'])\n  } catch (error) {\n    throw new Error('Wrong passphrase')\n  }\n}\n\nconst _genRandomBuffer = genRandomBuffer;\nconst _genRandomBufferAsStr = genRandomBufferAsStr;\n\nexport {\n  genId,\n  hash,\n  genKeyPair,\n  importPublicKey,\n  importPrivateKey,\n  exportPublicKey,\n  exportPrivateKey,\n  sign,\n  verify,\n  genAESKey,\n  importKey,\n  exportKey,\n  encrypt,\n  decrypt,\n  encryptBuffer,\n  decryptBuffer,\n  genEncryptedMasterKey,\n  decryptMasterKey,\n  updatePassphraseKey,\n  _genRandomBuffer,\n  _genRandomBufferAsStr,\n  CipherData,\n  DerivationParams,\n  ProtectedMasterKey\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}