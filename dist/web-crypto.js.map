{"version":3,"sources":["webpack://WebCrypto/webpack/universalModuleDefinition","webpack://WebCrypto/webpack/bootstrap","webpack://WebCrypto/./src/index.js","webpack://WebCrypto/./node_modules/buffer/index.js","webpack://WebCrypto/(webpack)/buildin/global.js","webpack://WebCrypto/./node_modules/base64-js/index.js","webpack://WebCrypto/./node_modules/ieee754/index.js","webpack://WebCrypto/./node_modules/isarray/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","importKey","type","parsedKey","Buffer","from","crypto","subtle","exportKey","async","exportedKey","Uint8Array","encryptBuffer","data","cipherContext","encrypted","encrypt","decryptBuffer","decrypted","decrypt","e","message","Error","checkCryptokey","genRandomBuffer","len","values","getRandomValues","format","context","iv","algorithm","plaintext","JSON","stringify","ciphertext","toString","parse","error","genRandomBufferAsStr","encodingFormat","checkEncodingFormat","deriveBits","passPhrase","salt","iterations","hashAlgo","console","warn","baseKey","derivedKey","hash","deriveKeyFromPassphrase","str","checkPassphrase","derivationParams","decryptMasterKey","protectedMasterKey","encryptedMasterKey","_salt","keyEncryptionKey","decryptedMasterKeyHex","genAESKey","extractable","keySize","generateKey","length","genEncryptedMasterKey","masterKey","updatePassphraseKey","currentPassPhrase","newPassPhrase","oldMasterKey","toBeEncryptedMasterKey","digest","_genRandomBuffer","_genRandomBufferAsStr","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2"],"mappings":"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","file":"web-crypto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WebCrypto\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebCrypto\"] = factory();\n\telse\n\t\troot[\"WebCrypto\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Originally from https://github.com/QwantResearch/masq-common/ with modifications\n * by Andrei Sambra\n */\n\n/**\n   * Generate an AES key based on the cipher mode and keysize\n   * @param {boolean} [extractable] - Specify if the generated key is extractable\n   * @param {string} [mode] - The aes mode of the generated key\n   * @param {Number} [keySize] - Specify if the generated key is extractable\n   * @returns {Promise<CryptoKey>} - The generated AES key.\n   */\nconst genAESKey = (extractable, mode = 'AES-GCM', keySize = 128) => {\n  return window.crypto.subtle.generateKey({\n    name: mode,\n    length: keySize\n  }, extractable || true, ['decrypt', 'encrypt'])\n}\n\n/**\n    * Import a raw|jwk as a CryptoKey\n    *\n    * @param {arrayBuffer|Object} key - The key\n    * @param {string} [type] - The type of the key to import ('raw', 'jwk')\n    * @param {string} [mode] - The mode of the key to import (default 'AES-GCM')\n    * @returns {Promise<arrayBuffer>} - The cryptoKey\n    */\nconst importKey = (key, type = 'raw', mode = 'AES-GCM') => {\n  const parsedKey = (type === 'raw') ? Buffer.from(key, 'base64') : key\n  return window.crypto.subtle.importKey(type, parsedKey, { name: mode }\n    , true, ['encrypt', 'decrypt'])\n}\n\n/**\n  * Export a CryptoKey into a raw|jwk key\n  *\n  * @param {CryptoKey} key - The CryptoKey\n  * @param {string} [type] - The type of the exported key: raw|jwk\n  * @returns {Promise<arrayBuffer>} - The raw key or the key as a jwk format\n  */\nconst exportKey = async (key, type = 'raw') => {\n  const exportedKey = await window.crypto.subtle.exportKey(type, key)\n  return (type === 'raw') ? new Uint8Array(exportedKey) : exportedKey\n}\n\n/**\n   * Encrypt buffer\n   *\n   * @param {ArrayBuffer} key - The AES CryptoKey\n   * @param {ArrayBuffer} data - Data to encrypt\n   * @param {Object} cipherContext - The AES cipher parameters\n   * @returns {ArrayBuffer} - The encrypted buffer\n   */\nconst encryptBuffer = async (key, data, cipherContext) => {\n  const encrypted = await window.crypto.subtle.encrypt(cipherContext, key, data)\n  return new Uint8Array(encrypted)\n}\n\n/**\n * Decrypt buffer\n * @param {ArrayBuffer} key - The AES CryptoKey\n * @param {ArrayBuffer} data - Data to decrypt\n * @param {Object} cipherContext - The AES cipher parameters\n * @returns {Promise<ArrayBuffer>} - The decrypted buffer\n */\nconst decryptBuffer = async (key, data, cipherContext) => {\n  // TODO: test input params\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(cipherContext, key, data)\n    return new Uint8Array(decrypted)\n  } catch (e) {\n    if (e.message === 'Unsupported state or unable to authenticate data') {\n      throw new Error('Unable to decrypt data')\n    }\n  }\n}\n\nconst checkCryptokey = (key) => {\n  if (!key.type || key.type !== 'secret') {\n    throw new Error('Invalid key type')\n  }\n}\n\nconst genRandomBuffer = (len = 16) => {\n  const values = window.crypto.getRandomValues(new Uint8Array(len))\n  return Buffer.from(values)\n}\n\n/**\n * Encrypt data\n *\n * @param {CryptoKey} key - The AES CryptoKey\n * @param {string | Object} - The data to encrypt\n * @param {string} [format] - The ciphertext and iv encoding format\n * @returns {Object} - The stringified ciphertext object (ciphertext and iv)\n */\nconst encrypt = async (key, data, format = 'hex') => {\n  checkCryptokey(key)\n  const context = {\n    iv: genRandomBuffer(key.algorithm.name === 'AES-GCM' ? 12 : 16),\n    plaintext: Buffer.from(JSON.stringify(data))\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n\n  const encrypted = await encryptBuffer(key, context.plaintext, cipherContext)\n  return {\n    ciphertext: Buffer.from(encrypted).toString(format),\n    iv: Buffer.from(context.iv).toString(format)\n  }\n}\n\n/**\n   * Decrypt data\n   *\n   * @param {CryptoKey} key - The AES CryptoKey\n   * @param {string | Object} - The data to encrypt\n   * @param {string} [format] - The ciphertext and iv encoding format\n   */\nconst decrypt = async (key, ciphertext, format = 'hex') => {\n  checkCryptokey(key)\n\n  const context = {\n    ciphertext: Object.prototype.hasOwnProperty.call(ciphertext, 'ciphertext') ? Buffer.from(ciphertext.ciphertext, (format)) : '',\n    // IV is 128 bits long === 16 bytes\n    iv: Object.prototype.hasOwnProperty.call(ciphertext, 'iv') ? Buffer.from(ciphertext.iv, (format)) : ''\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n  try {\n    const decrypted = await decryptBuffer(key, context.ciphertext, cipherContext)\n    return JSON.parse(Buffer.from(decrypted).toString())\n  } catch (error) {\n    throw new Error('Unable to decrypt data')\n  }\n}\n\nconst checkPassphrase = (str) => {\n  if (typeof str !== 'string' || str === '') {\n    throw new Error(`Not a valid value`)\n  }\n}\n\nconst checkEncodingFormat = (format) => {\n  if (format !== 'hex' && format !== 'base64') throw new Error('Invalid encoding')\n}\n\nconst genRandomBufferAsStr = (len = 16, encodingFormat = 'hex') => {\n  if (encodingFormat) {\n    checkEncodingFormat(encodingFormat)\n  }\n  const buf = genRandomBuffer(len)\n  return buf.toString(encodingFormat)\n}\n\n/**\n * Generate a PBKDF2 derived key (bits) based on user given passPhrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation\n * @returns {Promise<Uint8Array>} A promise that contains the derived key\n */\nconst deriveBits = async (passPhrase, salt, iterations, hashAlgo) => {\n  // Always specify a strong salt\n  if (iterations < 10000) { console.warn('Less than 10000 :(') }\n\n  const baseKey = await window.crypto.subtle.importKey(\n    'raw',\n    (typeof passPhrase === 'string') ? Buffer.from(passPhrase) : passPhrase,\n    'PBKDF2',\n    false,\n    ['deriveBits', 'deriveKey']\n  )\n  const derivedKey = await window.crypto.subtle.deriveBits({\n    name: 'PBKDF2',\n    salt: salt || new Uint8Array([]),\n    iterations: iterations || 100000,\n    hash: hashAlgo || 'SHA-256'\n  }, baseKey, 128)\n\n  return new Uint8Array(derivedKey)\n}\n\n/**\n * Derive a key based on a given passphrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<keyEncryptionKey>} A promise that contains the derived key and derivation\n * parameters\n */\nconst deriveKeyFromPassphrase = async (passPhrase, salt = genRandomBuffer(16), iterations = 100000, hashAlgo = 'SHA-256') => {\n  checkPassphrase(passPhrase)\n\n  const derivedKey = await deriveBits(passPhrase, salt, iterations, hashAlgo)\n  const key = await importKey(derivedKey)\n  return {\n    derivationParams: {\n      salt: Buffer.from(salt).toString('hex'),\n      iterations,\n      hashAlgo\n    },\n    key\n  }\n}\n\n/**\n * Derive the passphrase with PBKDF2 to obtain a KEK\n * Generate a AES key (masterKey)\n * Encrypt the masterKey with the KEK\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>} A promise that contains the encrypted derived key\n */\nconst genEncryptedMasterKey = async (passPhrase, salt, iterations, hashAlgo) => {\n  // derive key encryption key from passphrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(passPhrase, salt, iterations, hashAlgo)\n\n  // Generate the masterKey\n  const masterKey = await genRandomBufferAsStr(32, 'hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, masterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Update the derived encryption key (KEK) based on the new passphrase from user, while retaining\n * the symmetric key that encrypts data at rest\n *\n * @param {string | arrayBuffer} currentPassPhrase The current (old) passphrase that is used to derive the key\n * @param {string | arrayBuffer} newPassPhrase The new passphrase that will be used to derive the key\n * @param {oldMasterKey} oldMasterKey - The old object returned by genEncryptedMasterKey for the old passphrase\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>}\n */\nconst updatePassphraseKey = async (currentPassPhrase, newPassPhrase, oldMasterKey, salt, iterations, hashAlgo) => {\n  const masterKey = await decryptMasterKey(currentPassPhrase, oldMasterKey)\n  // derive a new key encryption key from newPassPhrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(newPassPhrase, salt, iterations, hashAlgo)\n\n  // enconde existing masterKey as a hex string since it's a buffer\n  const toBeEncryptedMasterKey = Buffer.from(await exportKey(masterKey)).toString('hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, toBeEncryptedMasterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Decrypt a master key by deriving the encryption key from the\n * provided passphrase and encrypted master key.\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {protectedMasterKey} protectedMasterKey - The same object returned\n * by genEncryptedMasterKey\n * @returns {Promise<masterKey>} A promise that contains the masterKey\n */\nconst decryptMasterKey = async (passPhrase, protectedMasterKey) => {\n  if (!protectedMasterKey.encryptedMasterKey ||\n    !protectedMasterKey.derivationParams) {\n    throw new Error('Missing properties from master key')\n  }\n  const { derivationParams, encryptedMasterKey } = protectedMasterKey\n  const { salt, iterations, hashAlgo } = derivationParams\n  const _salt = typeof (salt) === 'string' ? Buffer.from(salt, ('hex')) : salt\n  const derivedKey = await deriveBits(passPhrase, _salt, iterations, hashAlgo)\n  const keyEncryptionKey = await importKey(derivedKey)\n  try {\n    const decryptedMasterKeyHex = await decrypt(keyEncryptionKey, encryptedMasterKey)\n    // return decryptedMasterKeyHex\n    const parsedKey = Buffer.from(decryptedMasterKeyHex, 'hex')\n    return window.crypto.subtle.importKey('raw', parsedKey, { name: 'AES-GCM' }\n      , true, ['encrypt', 'decrypt'])\n  } catch (error) {\n    throw new Error('Wrong passphrase')\n  }\n}\n\n/**\n * Hash of a string or arrayBuffer\n *\n * @param {string | arrayBuffer} data The message\n * @param {string} [format] The encoding format ('hex' by default, could be 'base64')\n * @param {string} [name] The hashing algorithm (SHA-256 by default)\n * @returns {Promise<String>}  A promise that contains the hash as a String encoded with encodingFormat\n */\nconst hash = async (data, format = 'hex', name = 'SHA-256') => {\n  const digest = await window.crypto.subtle.digest(\n    {\n      name\n    },\n    (typeof data === 'string') ? Buffer.from(data) : data\n  )\n  return Buffer.from(digest).toString(format)\n}\n\nmodule.exports = {\n  genAESKey,\n  importKey,\n  exportKey,\n  encrypt,\n  decrypt,\n  encryptBuffer,\n  decryptBuffer,\n  genEncryptedMasterKey,\n  decryptMasterKey,\n  updatePassphraseKey,\n  hash,\n  _genRandomBuffer: genRandomBuffer,\n  _genRandomBufferAsStr: genRandomBufferAsStr\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}