{"version":3,"sources":["webpack://WebCrypto/webpack/universalModuleDefinition","webpack://WebCrypto/webpack/bootstrap","webpack://WebCrypto/./src/web-crypto.ts","webpack://WebCrypto/./node_modules/buffer/index.js","webpack://WebCrypto/(webpack)/buildin/global.js","webpack://WebCrypto/./node_modules/base64-js/index.js","webpack://WebCrypto/./node_modules/ieee754/index.js","webpack://WebCrypto/./node_modules/isarray/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","checkCryptokey","type","Error","genRandomBuffer","len","values","crypto","getRandomValues","Uint8Array","Buffer","from","genRandomBufferAsStr","encodingFormat","checkEncodingFormat","toString","format","genId","Math","floor","hash","data","subtle","digest","genKeyPair","extractable","namedCurve","generateKey","importPublicKey","importKey","importPrivateKey","exportPublicKey","exportKey","exported","exportPrivateKey","sign","JSON","stringify","signature","verify","genAESKey","keySize","length","parsedKey","exportedKey","encryptBuffer","cipherContext","encrypt","encrypted","decryptBuffer","decrypt","decrypted","message","context","iv","algorithm","plaintext","ciphertext","undefined","parse","deriveBits","passPhrase","salt","iterations","hashAlgo","console","warn","baseKey","derivedKey","deriveKeyFromPassphrase","str","checkPassphrase","derivationParams","genEncryptedMasterKey","keyEncryptionKey","masterKey","encryptedMasterKey","updatePassphraseKey","currentPassPhrase","newPassPhrase","oldMasterKey","decryptMasterKey","toBeEncryptedMasterKey","protectedMasterKey","_salt","decryptedMasterKeyHex","_genRandomBuffer","_genRandomBufferAsStr","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2"],"mappings":"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","file":"web-crypto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WebCrypto\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebCrypto\"] = factory();\n\telse\n\t\troot[\"WebCrypto\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Originally from https://github.com/QwantResearch/masq-common/ with improvements\n * by Andrei Sambra\n */\n\ninterface CipherData {\n  ciphertext: string;\n  iv: string;\n}\n\ninterface DerivationParams {\n  salt: string;\n  iterations: number;\n  hashAlgo: string;\n}\n\ninterface ProtectedMasterKey {\n  derivationParams: DerivationParams;\n  encryptedMasterKey: CipherData;\n}\n\nconst checkCryptokey = (key: CryptoKey) => {\n  if (!key.type || key.type !== 'secret') {\n    throw new Error('Invalid key type')\n  }\n}\n\nconst genRandomBuffer = (len = 16) => {\n  const values = window.crypto.getRandomValues(new Uint8Array(len))\n  return Buffer.from(values)\n}\n\nconst genRandomBufferAsStr = (len = 16, encodingFormat: BufferEncoding = 'hex') => {\n  if (encodingFormat) {\n    checkEncodingFormat(encodingFormat)\n  }\n  const buf = genRandomBuffer(len)\n  return buf.toString(encodingFormat)\n}\n\nconst checkPassphrase = (str: string) => {\n  if (typeof str !== 'string' || str === '') {\n    throw new Error(`Not a valid value`)\n  }\n}\n\nconst checkEncodingFormat = (format: BufferEncoding) => {\n  if (format !== 'hex' && format !== 'base64') throw new Error('Invalid encoding')\n}\n\n/**\n * Generate a random hexadecimal ID of a given length\n *\n * @param {integer} [len] The string length of the new ID\n * @returns {string} The new ID\n */\nconst genId = (len = 32) => {\n  // 2 bytes for each char\n  return genRandomBufferAsStr(Math.floor(len / 2))\n}\n\n/**\n * Generate the hash of a string or ArrayBuffer\n *\n * @param {string | arrayBuffer} data The message\n * @param {string} [format] The encoding format ('hex' by default, can also be 'base64')\n * @param {string} [name] The hashing algorithm (SHA-256 by default)\n * @returns {Promise<String>}  A promise that contains the hash as a String encoded with encodingFormat\n */\nconst hash = async (data: string | ArrayBuffer, format: BufferEncoding = 'hex', name = 'SHA-256') => {\n  const digest = await window.crypto.subtle.digest(\n    {\n      name\n    },\n    (typeof data === 'string') ? Buffer.from(data) : data\n  )\n  return Buffer.from(digest).toString(format)\n}\n\n/**\n   * Generate an ECDA key pair based on the provided curve name\n   *\n   * @param {boolean} extractable - Specify if the generated key is extractable\n   * @param {namedCurve} namedCurve - The curve name to use\n   * @returns {Promise<CryptoKey>} - A promise containing the key pair\n   */\nconst genKeyPair = (extractable = true, namedCurve = 'P-256') => {\n  return window.crypto.subtle.generateKey(\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    extractable,\n    ['sign', 'verify']\n  )\n}\n\n// Helper to correctly select return type based on format argument.\ntype KeyBufferEncoding = BufferEncoding | 'raw';\ntype SelectKeyType<TFormat extends KeyBufferEncoding> = TFormat extends 'raw' ? Uint8Array : string;\n\n/**\n  * Import a public key\n  *\n  * @param {CryptoKey} key - The public CryptoKey\n  * @param {string} namedCurve - The curve name to use\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction importPublicKey(key: string): Promise<CryptoKey>;\nfunction importPublicKey(key: string, namedCurve: string): Promise<CryptoKey>;\nfunction importPublicKey<TFormat extends KeyBufferEncoding>(key: SelectKeyType<TFormat>, namedCurve: string, format: TFormat): Promise<CryptoKey>;\n\nfunction importPublicKey(key: string | Uint8Array, namedCurve = 'P-256', format: KeyBufferEncoding = 'base64') {\n  return window.crypto.subtle.importKey(\n    'spki',\n    typeof key === 'string' ? Buffer.from(key, format as BufferEncoding) : key,\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    true,\n    ['verify']\n  )\n}\n\n/**\n  * Import a private key\n  *\n  * @param {CryptoKey} key - The private CryptoKey\n  * @param {string} namedCurve - The curve name to use\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction importPrivateKey(key: string): Promise<CryptoKey>;\nfunction importPrivateKey(key: string, namedCurve: string): Promise<CryptoKey>;\nfunction importPrivateKey<TFormat extends KeyBufferEncoding>(key: SelectKeyType<TFormat>, namedCurve: string, format: TFormat): Promise<CryptoKey>;\n\nfunction importPrivateKey(key: string | Uint8Array, namedCurve = 'P-256', format: KeyBufferEncoding = 'base64') {\n  return window.crypto.subtle.importKey(\n    'pkcs8',\n    typeof key === 'string' ? Buffer.from(key, format as BufferEncoding) : key,\n    {\n      name: 'ECDSA',\n      namedCurve // can be \"P-256\", \"P-384\", or \"P-521\"\n    },\n    true,\n    ['sign']\n  )\n}\n\n/**\n  * Export a public key\n  *\n  * @param {CryptoKey} key - The public CryptoKey\n  * @returns {Promise<arrayBuffer | string>} - The raw key\n  */\n\nfunction exportPublicKey(key: CryptoKey): Promise<string>;\nfunction exportPublicKey<TFormat extends KeyBufferEncoding> (key: CryptoKey, format: TFormat): Promise<SelectKeyType<TFormat>>;\n\nasync function exportPublicKey(key: CryptoKey, format: KeyBufferEncoding = 'base64') {\n  const exported = await window.crypto.subtle.exportKey('spki', key)\n  return (format === 'raw') ? new Uint8Array(exported) : Buffer.from(exported).toString(format)\n}\n\n/**\n  * Export a private key\n  *\n  * @param {CryptoKey} key - The private CryptoKey\n  * @returns {Promise<arrayBuffer>} - The raw key\n  */\nfunction exportPrivateKey(key: CryptoKey): Promise<string>;\nfunction exportPrivateKey<TFormat extends KeyBufferEncoding> (key: CryptoKey, format: TFormat): Promise<SelectKeyType<TFormat>>;\n \nasync function exportPrivateKey(key: CryptoKey, format: KeyBufferEncoding = 'base64') {\n  const exported = await window.crypto.subtle.exportKey('pkcs8', key)\n  return (format === 'raw') ? new Uint8Array(exported) : Buffer.from(exported).toString(format)\n}\n\n/**\n * Sign data using the private key\n *\n * @param {CryptoKey} key - The private key\n * @param {*} data - Data to sign\n * @param {*} hash - The hashing algorithm\n * @returns {Promise<arrayBuffer>} - The raw signature\n */\nconst sign = async (key: CryptoKey, data: any, format: KeyBufferEncoding = 'base64', hash = 'SHA-256') => {\n  const signature = await window.crypto.subtle.sign(\n    {\n      name: 'ECDSA',\n      hash: { name: hash } // can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n    },\n    key,\n    Buffer.from(JSON.stringify(data))\n  )\n  return (format === 'raw') ? new Uint8Array(signature) : Buffer.from(signature).toString(format)\n}\n\n/**\n * Verify data using the public key\n *\n * @param {CryptoKey} key - The public key\n * @param {*} data - Data to verify\n * @param {*} hash - The hashing algorithm\n * @returns {Promise<boolean>} - The verification outcome\n */\nconst verify = async (key: CryptoKey, data: any, signature: string, format: BufferEncoding = 'base64', hash = 'SHA-256') => {\n  return window.crypto.subtle.verify(\n    {\n      name: 'ECDSA',\n      hash: { name: hash } // can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n    },\n    key,\n    Buffer.from(signature, format),\n    Buffer.from(JSON.stringify(data))\n  )\n}\n\n/**\n   * Generate an AES key based on the cipher mode and keysize\n   *\n   * @param {boolean} [extractable] - Specify if the generated key is extractable\n   * @param {string} [mode] - The aes mode of the generated key\n   * @param {Number} [keySize] - Specify if the generated key is extractable\n   * @returns {Promise<CryptoKey>} - The generated AES key.\n   */\nconst genAESKey = (extractable = true, mode = 'AES-GCM', keySize = 128) => {\n  return window.crypto.subtle.generateKey({\n    name: mode,\n    length: keySize\n  },\n  extractable,\n  ['decrypt', 'encrypt'])\n}\n\n/**\n    * Import a raw|jwk as a CryptoKey\n    *\n    * @param {arrayBuffer|Object} key - The key\n    * @param {string} [type] - The type of the key to import ('raw', 'jwk')\n    * @param {string} [mode] - The mode of the key to import (default 'AES-GCM')\n    * @returns {Promise<arrayBuffer>} - The cryptoKey\n    */\nconst importKey = (key: ArrayBuffer, type = 'raw', mode = 'AES-GCM') => {\n  const parsedKey = (type === 'raw') ? Buffer.from(key as unknown as string, 'base64') : key\n  return window.crypto.subtle.importKey(type, parsedKey, { name: mode }\n    , true, ['encrypt', 'decrypt'])\n}\n\n/**\n  * Export a CryptoKey into a raw|jwk key\n  *\n  * @param {CryptoKey} key - The CryptoKey\n  * @param {string} [type] - The type of the exported key: raw|jwk\n  * @returns {Promise<arrayBuffer>} - The raw key or the key as a jwk format\n  */\nconst exportKey = async (key: CryptoKey, type: 'raw' | 'pkcs8' | 'spki' | 'jwk' = 'raw') => {\n  const exportedKey = await window.crypto.subtle.exportKey(type, key)\n  return (type === 'raw') ? new Uint8Array(exportedKey as ArrayBuffer) : exportedKey as ArrayBuffer\n}\n\n/**\n   * Encrypt buffer\n   *\n   * @param {ArrayBuffer} key - The AES CryptoKey\n   * @param {ArrayBuffer} data - Data to encrypt\n   * @param {Object} cipherContext - The AES cipher parameters\n   * @returns {ArrayBuffer} - The encrypted buffer\n   */\nconst encryptBuffer = async <TCipherContext extends Algorithm>(key: CryptoKey, data: Buffer, cipherContext: TCipherContext) => {\n  const encrypted = await window.crypto.subtle.encrypt(cipherContext, key, data)\n  return new Uint8Array(encrypted)\n}\n\n/**\n * Decrypt buffer\n * @param {ArrayBuffer} key - The AES CryptoKey\n * @param {ArrayBuffer} data - Data to decrypt\n * @param {Object} cipherContext - The AES cipher parameters\n * @returns {Promise<ArrayBuffer>} - The decrypted buffer\n */\nconst decryptBuffer = async <TCipherContext extends Algorithm>(key: CryptoKey, data: ArrayBuffer, cipherContext: TCipherContext) => {\n  // TODO: test input params\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(cipherContext, key, data)\n    return new Uint8Array(decrypted)\n  } catch (e) {\n    if (e.message === 'Unsupported state or unable to authenticate data') {\n      throw new Error('Unable to decrypt data')\n    }\n  }\n}\n\n/**\n * Encrypt data\n *\n * @param {CryptoKey} key - The AES CryptoKey\n * @param {string | Object} - The data to encrypt\n * @param {string} [format] - The ciphertext and iv encoding format\n * @returns {Object} - The stringified ciphertext object (ciphertext and iv)\n */\nconst encrypt = async (key: CryptoKey, data: string | object, format: BufferEncoding = 'hex'): Promise<CipherData> => {\n  checkCryptokey(key)\n  const context = {\n    iv: genRandomBuffer(key.algorithm.name === 'AES-GCM' ? 12 : 16),\n    plaintext: Buffer.from(JSON.stringify(data))\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n\n  const encrypted = await encryptBuffer(key, context.plaintext, cipherContext)\n  return {\n    ciphertext: Buffer.from(encrypted).toString(format),\n    iv: Buffer.from(context.iv).toString(format)\n  }\n}\n\n/**\n   * Decrypt data\n   *\n   * @param {CryptoKey} key - The AES CryptoKey\n   * @param {string | Object} - The data to decrypt\n   * @param {string} [format] - The ciphertext and iv encoding format\n   */\nconst decrypt = async (key: CryptoKey, ciphertext: CipherData, format: BufferEncoding = 'hex') => {\n  checkCryptokey(key)\n\n  const context = {\n    ciphertext: Buffer.from(Object.prototype.hasOwnProperty.call(ciphertext, 'ciphertext') ? ciphertext.ciphertext : '', (format)),\n    // IV is 128 bits long === 16 bytes\n    iv: Object.prototype.hasOwnProperty.call(ciphertext, 'iv') ? Buffer.from(ciphertext.iv, (format)) : ''\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n  try {\n    const decrypted = await decryptBuffer(key, context.ciphertext, cipherContext)\n    if (decrypted === undefined) {\n      throw new Error();\n    }\n    return JSON.parse(Buffer.from(decrypted).toString())\n  } catch (error) {\n    throw new Error('Unable to decrypt data')\n  }\n}\n\n/**\n * Generate a PBKDF2 derived key (bits) based on user given passPhrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation\n * @returns {Promise<Uint8Array>} A promise that contains the derived key\n */\nconst deriveBits = async (passPhrase: string | ArrayBuffer, salt: ArrayBuffer, iterations: number, hashAlgo: string) => {\n  // Always specify a strong salt\n  if (iterations < 10000) { console.warn('Less than 10000 :(') }\n\n  const baseKey = await window.crypto.subtle.importKey(\n    'raw',\n    (typeof passPhrase === 'string') ? Buffer.from(passPhrase) : passPhrase,\n    'PBKDF2',\n    false,\n    ['deriveBits', 'deriveKey']\n  )\n  const derivedKey = await window.crypto.subtle.deriveBits({\n    name: 'PBKDF2',\n    salt: salt || new Uint8Array([]),\n    iterations: iterations || 100000,\n    hash: hashAlgo || 'SHA-256'\n  }, baseKey, 128)\n\n  return new Uint8Array(derivedKey)\n}\n\n/**\n * Derive a key based on a given passphrase\n *\n * @param {string} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<keyEncryptionKey>} A promise that contains the derived key and derivation\n * parameters\n */\nconst deriveKeyFromPassphrase = async (passPhrase: string, salt = genRandomBuffer(16), iterations = 100000, hashAlgo: string = 'SHA-256') => {\n  checkPassphrase(passPhrase)\n\n  const derivedKey = await deriveBits(passPhrase, salt, iterations, hashAlgo)\n  const key = await importKey(derivedKey)\n  return {\n    derivationParams: {\n      salt: Buffer.from(salt).toString('hex'),\n      iterations,\n      hashAlgo\n    },\n    key\n  }\n}\n\n/**\n * Derive the passphrase with PBKDF2 to obtain a KEK\n * Generate a AES key (masterKey)\n * Encrypt the masterKey with the KEK\n *\n * @param {string} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>} A promise that contains the encrypted derived key\n */\nconst genEncryptedMasterKey = async (passPhrase: string, salt?: Buffer, iterations?: number, hashAlgo?: string): Promise<ProtectedMasterKey> => {\n  // derive key encryption key from passphrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(passPhrase, salt, iterations, hashAlgo)\n\n  // Generate the masterKey\n  const masterKey = genRandomBufferAsStr(32, 'hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, masterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Update the derived encryption key (KEK) based on the new passphrase from user, while retaining\n * the symmetric key that encrypts data at rest\n *\n * @param {string} currentPassPhrase The current (old) passphrase that is used to derive the key\n * @param {string} newPassPhrase The new passphrase that will be used to derive the key\n * @param {oldMasterKey} oldMasterKey - The old object returned by genEncryptedMasterKey for the old passphrase\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>}\n */\nconst updatePassphraseKey = async (currentPassPhrase: string, newPassPhrase: string, oldMasterKey: ProtectedMasterKey, salt?: Buffer, iterations?: number, hashAlgo?: string): Promise<ProtectedMasterKey> => {\n  const masterKey = await decryptMasterKey(currentPassPhrase, oldMasterKey)\n  // derive a new key encryption key from newPassPhrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(newPassPhrase, salt, iterations, hashAlgo)\n\n  // enconde existing masterKey as a hex string since it's a buffer\n  const toBeEncryptedMasterKey = Buffer.from(await exportKey(masterKey)).toString('hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, toBeEncryptedMasterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Decrypt a master key by deriving the encryption key from the\n * provided passphrase and encrypted master key.\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {protectedMasterKey} protectedMasterKey - The same object returned\n * by genEncryptedMasterKey\n * @returns {Promise<masterKey>} A promise that contains the masterKey\n */\nconst decryptMasterKey = async (passPhrase: string, protectedMasterKey: ProtectedMasterKey) => {\n  if (!protectedMasterKey.encryptedMasterKey ||\n    !protectedMasterKey.derivationParams) {\n    throw new Error('Missing properties from master key')\n  }\n  const { derivationParams, encryptedMasterKey } = protectedMasterKey\n  const { salt, iterations, hashAlgo } = derivationParams\n  const _salt = typeof (salt) === 'string' ? Buffer.from(salt, ('hex')) : salt\n  const derivedKey = await deriveBits(passPhrase, _salt, iterations, hashAlgo)\n  const keyEncryptionKey = await importKey(derivedKey)\n  try {\n    const decryptedMasterKeyHex = await decrypt(keyEncryptionKey, encryptedMasterKey)\n    // return decryptedMasterKeyHex\n    const parsedKey = Buffer.from(decryptedMasterKeyHex, 'hex')\n    return window.crypto.subtle.importKey('raw', parsedKey, { name: 'AES-GCM' }\n      , true, ['encrypt', 'decrypt'])\n  } catch (error) {\n    throw new Error('Wrong passphrase')\n  }\n}\n\nconst _genRandomBuffer = genRandomBuffer;\nconst _genRandomBufferAsStr = genRandomBufferAsStr;\n\nexport {\n  genId,\n  hash,\n  genKeyPair,\n  importPublicKey,\n  importPrivateKey,\n  exportPublicKey,\n  exportPrivateKey,\n  sign,\n  verify,\n  genAESKey,\n  importKey,\n  exportKey,\n  encrypt,\n  decrypt,\n  encryptBuffer,\n  decryptBuffer,\n  genEncryptedMasterKey,\n  decryptMasterKey,\n  updatePassphraseKey,\n  _genRandomBuffer,\n  _genRandomBufferAsStr,\n  CipherData,\n  DerivationParams,\n  ProtectedMasterKey\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}